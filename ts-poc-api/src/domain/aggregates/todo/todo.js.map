{"version":3,"file":"todo.js","sourceRoot":"","sources":["todo.ts"],"names":[],"mappings":";;AAAA,0DAAiD;AACjD,8BAA4B;AAE5B,gFAA0E;AAC1E,oDAAqG;AACrG,oEAA+D;AAC/D,gFAA2E;AAC3E,wDAAoD;AAGpD,MAAa,IAAK,SAAQ,wBAAwB;IAE9C,IAAW,KAAK,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACvD,IAAW,WAAW,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;IACnE,IAAW,WAAW,KAAc,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;IAGpE,YAAmB,aAA4B,EAAE,MAA6C;QAE1F,KAAK,CAAC,aAAa,EAAE,MAAM,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;IACzD,CAAC;IAGM,MAAM,CAAC,WAAW,CAAC,aAA4B,EAAE,IAAY;QAEhE,MAAM,UAAU,GAAG;YACf,0BAAW;YACX,qCAAgB;YAChB,iDAAsB;YACtB,gDAAqB;SACxB,CAAC;QAEF,OAAO,wBAAa,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,EAAE,UAAU,EAAE,IAAyB,CAAS,CAAC;IACzG,CAAC;IAGM,WAAW,CAAC,KAAa;QAE5B,mBAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAExD,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAErB,IAAI,CAAC,UAAU,CAAC,IAAI,qCAAgB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,iBAAiB,CAAC,WAAmB;QAExC,mBAAK,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,cAAc,EAAE,CAAC;QAEnD,WAAW,GAAG,WAAW,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAE5F,IAAI,CAAC,UAAU,CAAC,IAAI,iDAAsB,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;IACjE,CAAC;IAEM,eAAe;QAElB,IAAI,CAAC,UAAU,CAAC,IAAI,gDAAqB,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC;CACJ;AAhDD,oBAgDC","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\r\nimport \"@nivinjoseph/n-ext\";\r\nimport { TodoState } from \"./todo-state\";\r\nimport { TodoMarkedAsCompleted } from \"./events/todo-marked-as-completed\";\r\nimport { AggregateRoot, DomainContext, AggregateRootData, DomainEvent } from \"@nivinjoseph/n-domain\";\r\nimport { TodoTitleUpdated } from \"./events/todo-title-updated\";\r\nimport { TodoDescriptionUpdated } from \"./events/todo-description-updated\";\r\nimport { TodoCreated } from \"./events/todo-created\";\r\n\r\n\r\nexport class Todo extends AggregateRoot<TodoState>\r\n{\r\n    public get title(): string { return this.state.title; }\r\n    public get description(): string { return this.state.description; }\r\n    public get isCompleted(): boolean { return this.state.isCompleted; }\r\n\r\n    \r\n    public constructor(domainContext: DomainContext, events: ReadonlyArray<DomainEvent<TodoState>>)\r\n    {\r\n        super(domainContext, events, { isCompleted: false });\r\n    }\r\n    \r\n    \r\n    public static deserialize(domainContext: DomainContext, data: object): Todo\r\n    {\r\n        const eventTypes = [\r\n            TodoCreated,\r\n            TodoTitleUpdated,\r\n            TodoDescriptionUpdated,\r\n            TodoMarkedAsCompleted\r\n        ];\r\n\r\n        return AggregateRoot.deserialize(domainContext, Todo, eventTypes, data as AggregateRootData) as Todo;\r\n    }\r\n\r\n\r\n    public updateTitle(title: string): void\r\n    {\r\n        given(title, \"title\").ensureHasValue().ensureIsString();\r\n\r\n        title = title.trim();\r\n\r\n        this.applyEvent(new TodoTitleUpdated({}, title));\r\n    }\r\n\r\n    public updateDescription(description: string): void\r\n    {\r\n        given(description, \"description\").ensureIsString();\r\n\r\n        description = description && !description.isEmptyOrWhiteSpace() ? description.trim() : null;\r\n        \r\n        this.applyEvent(new TodoDescriptionUpdated({}, description));\r\n    }\r\n\r\n    public markAsCompleted(): void\r\n    {\r\n        this.applyEvent(new TodoMarkedAsCompleted({}));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// https://thinkbeforecoding.com/post/2013/07/28/Event-Sourcing-vs-Command-Sourcing\r\n\r\n// Decide:\r\n// Command -> State -> Event list\r\n// ApplyStateChange:\r\n// State -> Event -> State"]}