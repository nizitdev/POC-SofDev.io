{"version":3,"file":"default-todo-factory.js","sourceRoot":"","sources":["default-todo-factory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,0DAAiD;AACjD,8BAA4B;AAC5B,kDAA+C;AAC/C,gDAA6C;AAC7C,oDAAoE;AACpE,yEAAqE;AAKrE,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAM3B,YAAmB,aAA4B,EAAE,QAAwB;QAErE,mBAAK,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QACxE,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QAEpC,mBAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAC9D,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAGY,MAAM,CAAC,KAAa,EAAE,WAAmB;;YAElD,mBAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;YACxD,mBAAK,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,cAAc,EAAE,CAAC;YAEnD,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YACrB,WAAW,GAAG,WAAW,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YAC5F,MAAM,KAAK,GAAG,IAAI,0BAAW,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,EAAE,uBAAY,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;YACtG,MAAM,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACpD,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC7C,CAAC;KAAA;CACJ,CAAA;AA5BY,kBAAkB;IAD9B,eAAM,CAAC,eAAe,EAAE,gBAAgB,CAAC;;GAC7B,kBAAkB,CA4B9B;AA5BY,gDAAkB","sourcesContent":["import { TodoFactory } from \"./todo-factory\";\r\nimport { given } from \"@nivinjoseph/n-defensive\";\r\nimport \"@nivinjoseph/n-ext\";\r\nimport { Todo } from \"../aggregates/todo/todo\";\r\nimport { inject } from \"@nivinjoseph/n-ject\";\r\nimport { DomainContext, DomainHelper } from \"@nivinjoseph/n-domain\";\r\nimport { TodoCreated } from \"../aggregates/todo/events/todo-created\";\r\nimport { TodoRepository } from \"../repositories/todo-repository\";\r\n\r\n\r\n@inject(\"DomainContext\", \"TodoRepository\")\r\nexport class DefaultTodoFactory implements TodoFactory\r\n{\r\n    private readonly _domainContext: DomainContext;\r\n    private readonly _todoRepo: TodoRepository;\r\n    \r\n    \r\n    public constructor(domainContext: DomainContext, todoRepo: TodoRepository)\r\n    {\r\n        given(domainContext, \"domainContext\").ensureHasValue().ensureIsObject();\r\n        this._domainContext = domainContext;\r\n        \r\n        given(todoRepo, \"todoRepo\").ensureHasValue().ensureIsObject();\r\n        this._todoRepo = todoRepo;\r\n    }\r\n    \r\n    \r\n    public async create(title: string, description: string): Promise<Todo>\r\n    {\r\n        given(title, \"title\").ensureHasValue().ensureIsString();\r\n        given(description, \"description\").ensureIsString();\r\n        \r\n        title = title.trim();\r\n        description = description && !description.isEmptyOrWhiteSpace() ? description.trim() : null;\r\n        const event = new TodoCreated({$isCreatedEvent: true}, DomainHelper.generateId(), title, description);\r\n        const todo = new Todo(this._domainContext, [event]);\r\n        await this._todoRepo.save(todo);\r\n        return await this._todoRepo.get(todo.id);\r\n    }\r\n}"]}