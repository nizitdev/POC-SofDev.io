{"version":3,"file":"server.js","sourceRoot":"","sources":["server.ts"],"names":[],"mappings":";;AAAA,8CAA4C;AAC5C,oDAA6D;AAC7D,2DAAwD;AAExD,0DAAiD;AAEjD,mFAA8E;AAC9E,8CAAmD;AACnD,8EAAyE;AACzE,mGAA6F;AAC7F,gDAAiE;AACjE,gFAA2E;AAC3E,oDAA4D;AAG5D,MAAM,SAAS;IAEJ,OAAO,CAAC,QAAkB;QAE7B,mBAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAE9D,QAAQ;aAEH,gBAAgB,CAAC,eAAe,EAAE,IAAI,8BAAmB,EAAE,CAAC;aAC5D,iBAAiB,CAAC,gBAAgB,EAAE,qCAAgB,CAAC;aACrD,iBAAiB,CAAC,aAAa,EAAE,yCAAkB,CAAC;aACpD,iBAAiB,CAAC,QAAQ,EAAE,qBAAa,CAAC;aAC1C,iBAAiB,CAAC,qBAAqB,EAAE,0DAA0B,CAAC;aACpE,iBAAiB,CAAC,IAAI,EAAE,iBAAQ,CAAC;aACjC,cAAc,CAAC,YAAY,EAAE,yBAAgB,CAAC,CAAC;IACxD,CAAC;CACJ;AAGD,MAAM,MAAM,GAAG,IAAI,cAAM,CAAC,+BAAoB,CAAC,SAAS,CAAS,MAAM,CAAC,CAAC;KACpE,YAAY,CAAC,IAAI,SAAS,EAAE,CAAC;KAC7B,mBAAmB,CAAC,GAAG,yBAAW,CAAC;KACnC,wBAAwB,CAAC,2CAAmB,CAAC;KAC7C,UAAU,EAAE,CAAC;AAElB,MAAM,CAAC,SAAS,EAAE,CAAC","sourcesContent":["import { WebApp } from \"@nivinjoseph/n-web\";\r\nimport { ConfigurationManager } from \"@nivinjoseph/n-config\";\r\nimport { controllers } from \"./controllers/controllers\";\r\nimport { ComponentInstaller, Registry } from \"@nivinjoseph/n-ject\";\r\nimport { given } from \"@nivinjoseph/n-defensive\";\r\n// import { InMemoryTodoRepository } from \"../data/repositories/in-memory-todo-repository\";\r\nimport { DefaultTodoFactory } from \"../domain/factories/default-todo-factory\";\r\nimport { ConsoleLogger } from \"@nivinjoseph/n-log\";\r\nimport { AppExceptionHandler } from \"./exceptions/app-exception-handler\";\r\nimport { DefaultDbConnectionFactory } from \"../data/factories/default-db-connection-factory\";\r\nimport { KnexPgDb, KnexPgUnitOfWork } from \"@nivinjoseph/n-data\";\r\nimport { DbTodoRepository } from \"../data/repositories/db-todo-repository\";\r\nimport { SystemDomainContext } from \"@nivinjoseph/n-domain\";\r\n\r\n\r\nclass Installer implements ComponentInstaller\r\n{\r\n    public install(registry: Registry): void\r\n    {\r\n        given(registry, \"registry\").ensureHasValue().ensureIsObject();\r\n        \r\n        registry\r\n            // .registerSingleton(\"TodoRepository\", InMemoryTodoRepository)\r\n            .registerInstance(\"DomainContext\", new SystemDomainContext())\r\n            .registerSingleton(\"TodoRepository\", DbTodoRepository)\r\n            .registerSingleton(\"TodoFactory\", DefaultTodoFactory)\r\n            .registerSingleton(\"Logger\", ConsoleLogger)\r\n            .registerSingleton(\"DbConnectionFactory\", DefaultDbConnectionFactory)\r\n            .registerSingleton(\"Db\", KnexPgDb)\r\n            .registerScoped(\"UnitOfWork\", KnexPgUnitOfWork);\r\n    }\r\n}\r\n\r\n\r\nconst server = new WebApp(ConfigurationManager.getConfig<number>(\"PORT\"))\r\n    .useInstaller(new Installer())\r\n    .registerControllers(...controllers)\r\n    .registerExceptionHandler(AppExceptionHandler)\r\n    .enableCors();\r\n\r\nserver.bootstrap();"]}