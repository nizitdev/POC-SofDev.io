{"version":3,"file":"default-db-connection-factory.js","sourceRoot":"","sources":["default-db-connection-factory.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,gDAAqF;AACrF,oDAA6D;AAG7D,MAAa,0BAA0B;IAKtB,MAAM;;YAEf,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAC9B;gBACI,IAAI,QAAQ,GAAG,+BAAoB,CAAC,SAAS,CAAW,UAAU,CAAC,CAAC;gBACpE,IAAI,CAAC,oBAAoB,GAAG,IAAI,kCAAyB,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAC7F,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAChE;YAED,OAAO,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;QACpD,CAAC;KAAA;IAGY,OAAO;;YAEhB,IAAI,IAAI,CAAC,oBAAoB,EAC7B;gBACI,IAAI,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACpD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,MAAM,mBAAmB,CAAC,OAAO,EAAE,CAAC;aACvC;QACL,CAAC;KAAA;CACJ;AA3BD,gEA2BC","sourcesContent":["import { DbConnectionFactory, KnexPgDbConnectionFactory } from \"@nivinjoseph/n-data\";\r\nimport { ConfigurationManager } from \"@nivinjoseph/n-config\";\r\n\r\n\r\nexport class DefaultDbConnectionFactory implements DbConnectionFactory\r\n{\r\n    private _dbConnectionFactory: DbConnectionFactory;\r\n\r\n\r\n    public async create(): Promise<object>\r\n    {\r\n        if (!this._dbConnectionFactory)\r\n        {\r\n            let dbConfig = ConfigurationManager.getConfig<DbConfig>(\"dbConfig\");\r\n            this._dbConnectionFactory = new KnexPgDbConnectionFactory(dbConfig.host, dbConfig.port.toString(),\r\n                dbConfig.database, dbConfig.username, dbConfig.password);\r\n        }\r\n\r\n        return await this._dbConnectionFactory.create();\r\n    }\r\n\r\n\r\n    public async dispose(): Promise<void>\r\n    {\r\n        if (this._dbConnectionFactory)\r\n        {\r\n            let dbConnectionFactory = this._dbConnectionFactory;\r\n            this._dbConnectionFactory = null;\r\n            await dbConnectionFactory.dispose();\r\n        }\r\n    }\r\n}\r\n\r\n\r\ninterface DbConfig\r\n{\r\n    host: string;\r\n    port: number;\r\n    database: string;\r\n    username: string;\r\n    password: string;\r\n}"]}