{"version":3,"file":"base-scope.js","sourceRoot":"","sources":["../src/base-scope.ts"],"names":[],"mappings":"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","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\nimport { Scope } from \"./scope\";\nimport { ScopeType } from \"./scope-type\";\nimport { Lifestyle } from \"./lifestyle\";\nimport \"@nivinjoseph/n-ext\";\nimport { ApplicationException, InvalidOperationException } from \"@nivinjoseph/n-exception\";\nimport { ComponentRegistry } from \"./component-registry\";\nimport { ComponentRegistration } from \"./component-registration\";\n\n// internal\nexport abstract class BaseScope implements Scope\n{\n    private readonly _scopeType: ScopeType;\n    private readonly _componentRegistry: ComponentRegistry;\n    private readonly _parentScope: Scope;\n    private readonly _scopedInstanceRegistry: {[index: string]: object} = {};\n    private _isBootstrapped = false;\n\n\n    public get scopeType(): ScopeType { return this._scopeType; }\n    protected get componentRegistry(): ComponentRegistry { return this._componentRegistry; }\n    protected get isBootstrapped(): boolean { return this._isBootstrapped; }\n\n\n    protected constructor(scopeType: ScopeType, componentRegistry: ComponentRegistry, parentScope: Scope)\n    {\n        given(scopeType, \"scopeType\").ensureHasValue();\n        given(componentRegistry, \"componentRegistry\").ensureHasValue();\n        given(parentScope, \"parentScope\")\n            // @ts-ignore\n            .ensure(t => scopeType === ScopeType.Child ? parentScope != null : parentScope == null,\n            \"cannot be null if scope is a child scope and has to be null if scope is root scope\");\n\n        this._scopeType = scopeType;\n        this._componentRegistry = componentRegistry;\n        this._parentScope = parentScope;\n    }\n\n\n    public resolve<T extends object>(key: string): T\n    {\n        if (!this.isBootstrapped)\n            throw new InvalidOperationException(\"resolve\");    \n        \n        given(key, \"key\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n\n        key = key.trim();\n        let registration = this._componentRegistry.find(key);\n        if (!registration)\n            throw new ApplicationException(\"No component with key '{0}' registered.\".format(key));\n\n        return this.findInstance(registration) as T;\n    }\n    \n    public abstract createScope(): Scope;\n    \n    \n    protected bootstrap(): void\n    {\n        this._isBootstrapped = true;\n    }\n\n    private findInstance(registration: ComponentRegistration): object\n    {\n        if (registration.lifestyle === Lifestyle.Instance)\n        {\n            return registration.component; \n        }    \n        else if (registration.lifestyle === Lifestyle.Singleton)\n        {\n            if (this.scopeType === ScopeType.Child)\n                return this._parentScope.resolve(registration.key);\n            else\n                return this.findScopedInstance(registration);\n        }\n        else if (registration.lifestyle === Lifestyle.Scoped)\n        {\n            if (this.scopeType === ScopeType.Root)\n                throw new ApplicationException(\"Cannot resolve component '{0}' with scoped lifestyle from root scope.\"\n                    .format(registration.key));\n            else\n                return this.findScopedInstance(registration);\n        }\n        else\n        {\n            return this.createInstance(registration);\n        }\n    }\n\n    private findScopedInstance(registration: ComponentRegistration): object\n    {\n        if (this._scopedInstanceRegistry[registration.key])\n            return this._scopedInstanceRegistry[registration.key];\n        else\n        {\n            let instance = this.createInstance(registration);\n            this._scopedInstanceRegistry[registration.key] = instance;\n            return instance;\n        }\n    }\n\n    private createInstance(registration: ComponentRegistration): object\n    {\n        let dependencyInstances = [];\n        for (let dependency of registration.dependencies)\n        {\n            let dependencyRegistration = this._componentRegistry.find(dependency);\n            if (!dependencyRegistration)\n                throw new ApplicationException(\"Dependency '{0}' of component '{1}' not registered.\"\n                    .format(dependency, registration.key));\n\n            dependencyInstances.push(this.findInstance(dependencyRegistration));\n        }\n        return new (<any>registration.component)(...dependencyInstances);\n    }\n}"]}