{"version":3,"file":"router.js","sourceRoot":"","sources":["../src/router.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Koa from \"koa\";\nimport * as KoaRouter from \"koa-router\";\nimport { Container, Scope } from \"@nivinjoseph/n-ject\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport { ControllerRegistration } from \"./controller-registration\";\nimport { Controller } from \"./controller\";\nimport { ApplicationException } from \"@nivinjoseph/n-exception\";\nimport { RouteInfo } from \"./route-info\";\nimport { HttpMethods } from \"./http-method\";\nimport { HttpException } from \"./exceptions/http-exception\";\nimport { HttpRedirectException } from \"./exceptions/http-redirect-exception\";\nimport { AuthorizationHandler } from \"./security/authorization-handler\";\nimport { CallContext } from \"./services/call-context/call-context\";\nimport { ConfigurationManager } from \"@nivinjoseph/n-config\";\n\nexport class Router\n{\n    private readonly _koa: Koa;\n    private readonly _container: Container;\n    private readonly _authorizationHandlerKey: string;\n    private readonly _callContextKey: string;\n    private readonly _koaRouter: KoaRouter;\n    private readonly _controllers = new Array<ControllerRegistration>();\n    \n    \n    public constructor(koa: Koa, container: Container, authorizationHandlerKey: string, callContextKey: string)\n    {\n        given(koa, \"koa\").ensureHasValue();\n        given(container, \"container\").ensureHasValue();\n        given(authorizationHandlerKey, \"authorizationHandlerKey\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        given(callContextKey, \"callContextKey\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        \n        this._koa = koa;\n        this._container = container;\n        this._authorizationHandlerKey = authorizationHandlerKey;\n        this._callContextKey = callContextKey;\n        this._koaRouter = new KoaRouter();\n    }\n    \n    \n    public registerControllers(...controllers: Function[]): void\n    {\n        for (let controller of controllers)\n        {\n            if (this._controllers.some(t => t.controller === controller))\n                throw new ApplicationException(\"Duplicate registration detected for Controller '{0}'.\"\n                    .format((controller as Object).getTypeName()));\n\n            let registration = new ControllerRegistration(controller);\n            this._controllers.push(registration);\n            this._container.registerScoped(registration.name, registration.controller);\n        }\n    }\n    \n    public configureRouting(viewResolutionRoot: string): void\n    {\n        let catchAllRegistration: ControllerRegistration = null;\n        \n        for (let registration of this._controllers)\n        {\n            registration.complete(viewResolutionRoot);\n            \n            if (registration.route.isCatchAll)\n            {\n                if (catchAllRegistration !== null)\n                    throw new ApplicationException(\"Multiple catch all registrations detected\");\n                \n                catchAllRegistration = registration;\n                continue;\n            }    \n            \n            switch (registration.method)\n            {\n                case HttpMethods.Get:\n                    this.configureGet(registration);\n                    break;\n                case HttpMethods.Post:\n                    this.configurePost(registration);\n                    break;\n                case HttpMethods.Put:\n                    this.configurePut(registration);\n                    break;\n                case HttpMethods.Delete:\n                    this.configureDelete(registration);\n                    break;\n            }\n        }\n\n        this._koa.use(this._koaRouter.routes());\n        this._koa.use(this._koaRouter.allowedMethods());\n        \n        if (catchAllRegistration)\n        {\n            // @ts-ignore\n            this._koa.use(async (ctx, next) =>\n            {\n                await this.handleRequest(ctx as KoaRouter.IRouterContext, catchAllRegistration, false);\n            });\n        }\n    }\n\n    private configureGet(registration: ControllerRegistration): void\n    {\n        this._koaRouter.get(registration.route.koaRoute, async (ctx) =>\n        {\n            await this.handleRequest(ctx, registration, false);\n        });\n    }\n    \n    private configurePost(registration: ControllerRegistration): void\n    {\n        this._koaRouter.post(registration.route.koaRoute, async (ctx) =>\n        {\n            await this.handleRequest(ctx, registration, true);\n        });\n    }\n\n    private configurePut(registration: ControllerRegistration): void\n    {\n        this._koaRouter.put(registration.route.koaRoute, async (ctx) =>\n        {\n            await this.handleRequest(ctx, registration, true);\n        });\n    }\n\n    private configureDelete(registration: ControllerRegistration): void\n    {\n        this._koaRouter.del(registration.route.koaRoute, async (ctx) =>\n        {\n            await this.handleRequest(ctx, registration, true);\n        });\n    }\n    \n    private async handleRequest(ctx: KoaRouter.IRouterContext, registration: ControllerRegistration,\n        processBody: boolean): Promise<void>\n    {\n        let scope = ctx.state.scope as Scope;\n        let callContext = scope.resolve<CallContext>(this._callContextKey);\n        \n        if (registration.authorizeClaims)\n        {\n            if (!callContext.isAuthenticated)\n                throw new HttpException(401);\n            \n            let authorizationHandler = scope.resolve<AuthorizationHandler>(this._authorizationHandlerKey);\n            let authorized = await authorizationHandler.authorize(callContext.identity, registration.authorizeClaims);\n            if (!authorized)\n                throw new HttpException(403);    \n        }    \n        \n        let args = this.createRouteArgs(registration.route, ctx);\n        \n        if (processBody)\n            args.push(ctx.request.body);\n\n        \n        let controllerInstance = scope.resolve<Controller>(registration.name);\n        \n        let result: any;\n        \n        try \n        {\n            result = await controllerInstance.execute(...args);\n        }\n        catch (error)\n        {\n            if (!(error instanceof HttpRedirectException))\n                throw error;    \n            \n            ctx.redirect((error as HttpRedirectException).url);\n            return;\n        }\n        \n        if (registration.view !== null)\n        {\n            let vm = result;\n            if (typeof (vm) !== \"object\")\n                vm = { value: result };\n            \n            let view = registration.view;\n            let viewLayout = registration.viewLayout;\n            if (viewLayout !== null)\n                // tslint:disable\n                view = eval(\"`\" + viewLayout + \"`\");\n            \n            let html = eval(\"`\" + view + \"`\") as string;\n            // tslint:enable\n            let config = Object.assign({ env: ConfigurationManager.getConfig(\"env\") }, vm.config || {});\n            html = html.replace(\"<body>\",\n                `\n                    <body>\n                    <script>\n                        window.config = \"${Buffer.from(JSON.stringify(config), \"utf8\").toString(\"hex\")}\";\n                    </script>\n                `);\n            result = html;\n        }\n        \n        ctx.body = result;\n    }\n    \n    private createRouteArgs(route: RouteInfo, ctx: KoaRouter.IRouterContext): Array<any>\n    {\n        let queryParams = ctx.query;\n        let pathParams = ctx.params;\n        let model: { [index: string]: any } = {};\n\n        for (let key in queryParams)\n        {\n            let routeParam = route.findRouteParam(key);\n            if (routeParam)\n            {\n                let parsed = routeParam.parseParam(queryParams[key]);\n                model[routeParam.paramKey] = parsed;\n                queryParams[key] = parsed;\n            }\n            else\n            {\n                let value = queryParams[key];\n                if (value === undefined || value == null || value.isEmptyOrWhiteSpace() || value.trim().toLowerCase() === \"null\")\n                    queryParams[key] = null;    \n            }\n        }\n\n        for (let key in pathParams)\n        {\n            let routeParam = route.findRouteParam(key);\n            if (!routeParam)\n                throw new HttpException(404);\n\n            let parsed = routeParam.parseParam(pathParams[key]);\n            model[routeParam.paramKey] = parsed;\n            pathParams[key] = parsed;\n        }\n\n        let result = [];\n        for (let routeParam of route.params)\n        {\n            let value = model[routeParam.paramKey];\n            if (value === undefined || value === null)\n            {\n                if (!routeParam.isOptional)\n                    throw new HttpException(404);\n\n                value = null;\n            }\n            result.push(value);\n        }\n\n        return result;\n    }\n}"]}