{"version":3,"file":"string-ext.js","sourceRoot":"","sources":["../src/string-ext.ts"],"names":[],"mappings":"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","sourcesContent":["import { Buffer } from \"buffer\";\n\n\nclass StringExt\n{\n    public static isEmptyOrWhiteSpace(value: string): boolean\n    {\n        return value.trim().length === 0;\n    }\n\n    public static contains(primary: string, sub: string): boolean\n    {\n        return primary.indexOf(sub) !== -1;\n    }\n\n    public static startsWith(primary: string, sub: string): boolean\n    {\n        return primary.indexOf(sub) === 0;\n    }\n\n    public static endsWith(primary: string, sub: string): boolean\n    {\n        let index = primary.lastIndexOf(sub);\n        if (index === -1) return false;\n        return (index + sub.length) === primary.length;\n    }\n\n    public static extractNumbers(value: string): string\n    {\n        return value.replace(/[^0-9]/g, \"\");\n    }\n    \n    public static extractCharacters(value: string): string\n    {\n        return value.replace(/[^a-zA-Z ]/g, \"\");\n    }\n\n    public static format(formatString: string, ...params: any[]): string\n    {\n        let result = formatString.toString();\n        if (result == null) return null;\n\n        if (params == null || params.length === 0) return result;\n\n        for (let i = 0; i < params.length; i++)\n        {\n            let format = \"{\" + i.toString() + \"}\";\n            while (StringExt.contains(result, format))\n                result = result.replace(format, params[i].toString());\n        }\n\n        return result;\n    }\n    \n    public static replaceAll(primary: string, searchValue: string, replaceValue: string): string\n    {\n        // let matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n        // let result = primary.replace(matchOperatorsRe, \"\\\\$&\");\n        \n        // let searchRe = new RegExp(searchValue, ignoreCase ? \"gi\" : \"g\");\n        \n        // return result.replace(searchRe, replaceValue);\n        \n        while (primary.indexOf(searchValue) !== -1)\n            primary = primary.replace(searchValue, replaceValue);\n        \n        return primary;\n    }\n    \n    public static base64Encode(value: string): string\n    {\n        return Buffer.from(value, \"utf8\").toString(\"base64\");\n    }\n    \n    public static base64Decode(value: string): string\n    {\n        return Buffer.from(value, \"base64\").toString(\"utf8\");\n    }\n    \n    public static base64UrlEncode(value: string): string\n    {\n        return Buffer.from(value, \"utf8\").toString(\"base64\")\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n    \n    public static base64UrlDecode(value: string): string\n    {\n        value = StringExt.padString(value)\n            .replace(/\\-/g, \"+\")\n            .replace(/_/g, \"/\");\n        \n        return Buffer.from(value, \"base64\").toString(\"utf8\");\n    }\n    \n    \n    private static padString(input: string): string\n    {\n        let segmentLength = 4;\n        let stringLength = input.length;\n        let diff = stringLength % segmentLength;\n\n        if (!diff)\n            return input;\n\n        let position = stringLength;\n        let padLength = segmentLength - diff;\n        let paddedStringLength = stringLength + padLength;\n        let buffer = new Buffer(paddedStringLength);\n        buffer.write(input);\n\n        while (padLength--)\n            buffer.write(\"=\", position++);\n\n        return buffer.toString();\n    }\n}\n\n\nObject.defineProperty(String.prototype, \"isEmptyOrWhiteSpace\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (): boolean\n    {\n        return StringExt.isEmptyOrWhiteSpace(this.toString());\n    }\n});\n\nObject.defineProperty(String.prototype, \"contains\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (sub: string): boolean\n    {\n        return StringExt.contains(this.toString(), sub);\n    }\n});\n\nObject.defineProperty(String.prototype, \"startsWith\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (sub: string): boolean\n    {\n        return StringExt.startsWith(this.toString(), sub);\n    }\n});\n\nObject.defineProperty(String.prototype, \"endsWith\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (sub: string): boolean\n    {\n        return StringExt.endsWith(this.toString(), sub);\n    }\n});\n\nObject.defineProperty(String.prototype, \"extractNumbers\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (): string\n    {\n        return StringExt.extractNumbers(this.toString());\n    }\n});\n\nObject.defineProperty(String.prototype, \"extractCharacters\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (): string\n    {\n        return StringExt.extractCharacters(this.toString());\n    }\n});\n\nObject.defineProperty(String.prototype, \"format\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (...params: any[]): string\n    {\n        return StringExt.format(this.toString(), ...params);\n    }\n});\n\nObject.defineProperty(String.prototype, \"replaceAll\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (searchValue: string, replaceValue: string): string\n    {\n        return StringExt.replaceAll(this.toString(), searchValue, replaceValue);\n    }\n});\n\nObject.defineProperty(String.prototype, \"base64Encode\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (): string\n    {\n        return StringExt.base64Encode(this.toString());\n    }\n});\n\nObject.defineProperty(String.prototype, \"base64Decode\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (): string\n    {\n        return StringExt.base64Decode(this.toString());\n    }\n});\n\nObject.defineProperty(String.prototype, \"base64UrlEncode\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (): string\n    {\n        return StringExt.base64UrlEncode(this.toString());\n    }\n});\n\nObject.defineProperty(String.prototype, \"base64UrlDecode\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (): string\n    {\n        return StringExt.base64UrlDecode(this.toString());\n    }\n});"]}