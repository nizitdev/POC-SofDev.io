{"version":3,"file":"event.js","sourceRoot":"","sources":["../../../src/services/event-aggregator/event.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,0DAAiD;AACjD,8BAA4B;AAGf,QAAA,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAG/C,SAAgB,KAAK,CAAC,KAAa;IAE/B,mBAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,cAAc,EAAE;SACjC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,EAAE,+BAA+B,CAAC,CAAC;IAE5E,OAAO,CAAC,MAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,mBAAW,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;AAC3F,CAAC;AAND,sBAMC","sourcesContent":["import \"reflect-metadata\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport \"@nivinjoseph/n-ext\";\n\n\nexport const eventSymbol = Symbol(\"eventName\");\n\n// public\nexport function event(event: string): Function\n{\n    given(event, \"event\").ensureHasValue()\n        .ensure(t => !t.isEmptyOrWhiteSpace(), \"cannot be empty or whitespace\");\n\n    return (target: Function) => Reflect.defineMetadata(eventSymbol, event.trim(), target);\n}"]}