{"version":3,"file":"web-app.js","sourceRoot":"","sources":["../src/web-app.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Koa from \"koa\";\nimport * as KoaBodyParser from \"koa-bodyparser\";\nimport { Container, ComponentInstaller, Scope } from \"@nivinjoseph/n-ject\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport { Router } from \"./router\";\nimport { Exception, ArgumentException, InvalidOperationException } from \"@nivinjoseph/n-exception\";\nimport * as serve from \"koa-static\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport \"@nivinjoseph/n-ext\";\nimport * as cors from \"kcors\";\nimport { DefaultCallContext } from \"./services/call-context/default-call-context\";\nimport { AuthenticationHandler } from \"./security/authentication-handler\";\nimport { CallContext } from \"./services/call-context/call-context\";\nimport { DefaultAuthorizationHandler } from \"./security/default-authorization-handler\";\nimport { ClaimsIdentity } from \"@nivinjoseph/n-sec\";\nimport { DefaultExceptionHandler } from \"./exceptions/default-exception-handler\";\nimport { HttpException } from \"./exceptions/http-exception\";\nimport { ExceptionHandler } from \"./exceptions/exception-handler\";\nimport { ConfigurationManager } from \"@nivinjoseph/n-config\";\nimport * as koaWebpack from \"koa-webpack\";\nimport { ConsoleLogger, Logger } from \"@nivinjoseph/n-log\";\nimport { DefaultEventAggregator } from \"./services/event-aggregator/default-event-aggregator\";\nimport { EventHandlerRegistration } from \"./services/event-aggregator/event-handler-registration\";\nimport { BackgroundProcessor, Delay } from \"@nivinjoseph/n-util\";\nimport * as Http from \"http\";\nimport { Job } from \"./jobs/job\";\n\n\n// public\nexport class WebApp\n{\n    private readonly _port: number;\n    private readonly _koa: Koa;\n    private readonly _container: Container;\n    private readonly _router: Router;\n    \n    private readonly _callContextKey = \"CallContext\";\n\n    private readonly _eventAggregatorKey = \"EventAggregator\";\n    private readonly _eventRegistrations = new Array<EventHandlerRegistration>();\n    private _backgroundProcessor: BackgroundProcessor;\n\n    private readonly _jobRegistrations = new Array<Function>();\n    private readonly _jobInstances = new Array<Job>();\n    \n    private readonly _exceptionHandlerKey = \"$exceptionHandler\";\n    private _hasExceptionHandler = false;\n    \n    private readonly _authenticationHandlerKey = \"$authenticationHandler\";\n    private _hasAuthenticationHandler = false;\n    private _authHeader = \"authorization\";\n    \n    private readonly _authorizationHandlerKey = \"$authorizationHandler\";\n    private _hasAuthorizationHandler = false;\n    \n    private _logger: Logger;\n    \n    \n    private readonly _staticFilePaths = new Array<{ path: string; cache: boolean }>();\n    private _enableCors = false;\n    private _viewResolutionRoot: string;\n    private _disposeActions = new Array<() => Promise<void>>();\n    private _server: Http.Server;\n    private _isBootstrapped: boolean = false;\n    \n    \n    public constructor(port: number)\n    {\n        given(port, \"port\").ensureHasValue();\n        this._port = port;\n        this._koa = new Koa();\n        this._container = new Container();\n        this._router = new Router(this._koa, this._container, this._authorizationHandlerKey, this._callContextKey);\n    }\n    \n    \n    public enableCors(): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"enableCors\");\n        \n        this._enableCors = true;\n        return this;\n    }\n    \n    public registerStaticFilePath(filePath: string, cache = false): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerStaticFilePaths\");\n        \n        given(filePath, \"filePath\").ensureHasValue().ensureIsString();\n        given(cache, \"cache\").ensureHasValue().ensureIsBoolean();\n        \n        filePath = filePath.trim();\n        if (filePath.startsWith(\"/\"))\n        {\n            if (filePath.length === 1)\n            {\n                throw new ArgumentException(\"filePath[{0}]\".format(filePath), \"is root\");\n            }\n            filePath = filePath.substr(1);\n        }\n\n        filePath = path.join(process.cwd(), filePath);\n\n        // We skip the defensive check in dev because of webpack HMR \n        if (ConfigurationManager.getConfig<string>(\"env\") !== \"dev\")\n        {\n            if (!fs.existsSync(filePath))\n                throw new ArgumentException(\"filePath[{0}]\".format(filePath), \"does not exist\");\n        }\n\n        if (this._staticFilePaths.some(t => t.path === filePath))\n            throw new ArgumentException(\"filePath[{0}]\".format(filePath), \"is duplicate\");\n\n        this._staticFilePaths.push({path: filePath, cache: cache});\n        \n        return this;\n    }\n    \n    public registerControllers(...controllerClasses: Function[]): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerControllers\");\n        \n        this._router.registerControllers(...controllerClasses);\n        return this;\n    }\n    \n    public registerEventHandlers(...eventHandlerClasses: Function[]): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerEventHandlers\");\n        \n        this._eventRegistrations.push(...eventHandlerClasses.map(t => new EventHandlerRegistration(t)));\n        return this;\n    }\n\n    public registerJobs(...jobClasses: Function[]): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerJobs\");\n        \n        this._jobRegistrations.push(...jobClasses);\n        return this;\n    }\n    \n    public useLogger(logger: Logger): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"useLogger\");\n\n        given(logger, \"logger\").ensureHasValue().ensureIsObject();\n        \n        this._logger = logger;\n        return this;\n    }\n    \n    public useInstaller(installer: ComponentInstaller): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerInstaller\");\n        \n        given(installer, \"installer\").ensureHasValue();\n        this._container.install(installer);\n        return this;\n    }\n    \n    public registerExceptionHandler(exceptionHandlerClass: Function): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerExceptionHandler\");\n        \n        given(exceptionHandlerClass, \"exceptionHandlerClass\").ensureHasValue();\n        this._container.registerScoped(this._exceptionHandlerKey, exceptionHandlerClass);\n        this._hasExceptionHandler = true;\n        return this;\n    }\n    \n    public registerAuthenticationHandler(authenticationHandler: Function, authHeader?: string): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerAuthenticationHandler\");\n        \n        given(authenticationHandler, \"authenticationHandler\").ensureHasValue();\n        given(authHeader, \"authHeader\").ensureIsString().ensure(t => !t.isEmptyOrWhiteSpace());\n        this._container.registerScoped(this._authenticationHandlerKey, authenticationHandler);\n        this._hasAuthenticationHandler = true;\n        if (authHeader)\n            this._authHeader = authHeader.trim();    \n        return this;\n    }\n    \n    public registerAuthorizationHandler(authorizationHandler: Function): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerAuthorizationHandler\");\n        \n        given(authorizationHandler, \"authorizationHandler\").ensureHasValue();\n        this._container.registerScoped(this._authorizationHandlerKey, authorizationHandler);\n        this._hasAuthorizationHandler = true;\n        return this;\n    }\n    \n    public useViewResolutionRoot(path: string): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"useViewResolutionRoot\");\n        \n        given(path, \"path\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        this._viewResolutionRoot = path.trim();\n        return this;\n    }\n    \n    public enableWebPackDevMiddleware(publicPath: string = \"/\"): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"enableWebPackDevMiddleware\");\n        \n        // if (ConfigurationManager.getConfig<string>(\"env\") === \"dev\")\n        //     this._koa.use(webPackMiddleware(\n        //         {\n        //             dev: { publicPath, writeToDisk: true },\n        //             hot: <any>{ reload: true, hot: true }\n        //         } as any\n        //     ));\n        \n        \n        if (ConfigurationManager.getConfig<string>(\"env\") === \"dev\")\n        {\n            // tslint:disable-next-line\n            koaWebpack({\n                devMiddleware: {\n                    publicPath: publicPath,\n                    writeToDisk: true,\n                },\n                hotClient: {\n                    hmr: true,\n                    reload: true\n                }\n            }).then((middleware) => this._koa.use(middleware));\n        }\n            \n        return this;\n    }\n    \n    public registerDisposeAction(disposeAction: () => Promise<void>): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerForDispose\");\n        \n        given(disposeAction, \"disposeAction\").ensureHasValue().ensureIsFunction();\n        \n        this._disposeActions.push(() =>\n        {\n            return new Promise((resolve) =>\n            {\n                try \n                {\n                    disposeAction()\n                        .then(() => resolve())\n                        .catch((e) =>\n                        {\n                            // tslint:disable-next-line\n                            this._logger.logError(e).then(() => resolve());\n                        });\n                }\n                catch (error)\n                {\n                    // tslint:disable-next-line\n                    this._logger.logError(error).then(() => resolve());\n                }\n            });\n        });\n        return this;\n    }\n    \n    public bootstrap(): void\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"bootstrap\");\n        \n        if (!this._logger)\n            this._logger = new ConsoleLogger();\n        \n        this._backgroundProcessor = new BackgroundProcessor((e) => this._logger.logError(e as any));\n        this.registerDisposeAction(() => this._backgroundProcessor.dispose());\n        \n        this.configureCors();\n        this.configureContainer();\n        this.configureScoping();\n        this.configureCallContext();\n        this.configureExceptionHandling();\n        this.configureErrorTrapping();\n        // this.configureEventHandling();\n        this.configureAuthentication();\n        this.configureStaticFileServing();\n        this.configureBodyParser();\n        this.configureRouting(); // must be last\n        \n        const appEnv = ConfigurationManager.getConfig<string>(\"env\");\n        const appName = ConfigurationManager.getConfig<string>(\"appInfo.name\");\n        const appVersion = ConfigurationManager.getConfig<string>(\"appInfo.version\");\n        const appDescription = ConfigurationManager.getConfig<string>(\"appInfo.description\");\n        \n        console.log(\"SERVER STARTING.\");\n        console.log(`ENV: ${appEnv}; NAME: ${appName}; VERSION: ${appVersion}; DESCRIPTION: ${appDescription}.`);\n        this._server = Http.createServer(this._koa.callback());\n        this._server.listen(this._port);\n        this.configureShutDown();\n        \n        this._isBootstrapped = true;\n        console.log(\"SERVER STARTED.\");\n    }\n    \n    \n    private configureCors(): void\n    {\n        if (this._enableCors)\n            this._koa.use(cors());    \n    }\n    \n    private configureContainer(): void\n    { \n        this._container.registerScoped(this._callContextKey, DefaultCallContext);\n        \n        this._container.registerSingleton(this._eventAggregatorKey, DefaultEventAggregator);\n        this._eventRegistrations.forEach(t => this._container.registerSingleton(t.eventHandlerName, t.eventHandler));\n\n        this._jobRegistrations.forEach(jobClass => this._container.registerSingleton((<Object>jobClass).getTypeName(), jobClass));\n        \n        if (!this._hasAuthorizationHandler)\n            this._container.registerScoped(this._authorizationHandlerKey, DefaultAuthorizationHandler);\n        \n        if (!this._hasExceptionHandler)\n            this._container.registerInstance(this._exceptionHandlerKey, new DefaultExceptionHandler(this._logger));    \n        \n        this._container.bootstrap();\n        \n        const eventAggregatorInstance = this._container.resolve<DefaultEventAggregator>(this._eventAggregatorKey);\n        eventAggregatorInstance.useProcessor(this._backgroundProcessor);\n        this._eventRegistrations.forEach(t => eventAggregatorInstance.subscribe(t.eventName, this._container.resolve(t.eventHandlerName)));\n\n        this._jobRegistrations.forEach(jobClass => this._jobInstances.push(this._container.resolve((<Object>jobClass).getTypeName())));\n        this._jobInstances.forEach(t => this.registerDisposeAction(() => t.dispose()));\n    }\n    \n    private configureScoping(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            ctx.state.scope = this._container.createScope();\n            await next();\n        });\n    }\n    \n    private configureCallContext(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            let scope: Scope = ctx.state.scope;\n            let defaultCallContext = scope.resolve<DefaultCallContext>(this._callContextKey);\n            defaultCallContext.configure(ctx, this._authHeader);\n            await next();\n        });\n    }\n    \n    private configureExceptionHandling(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            try \n            {\n                await next();\n            }\n            catch (error)\n            {   \n                if (error instanceof HttpException)\n                {  \n                    ctx.status = error.statusCode;\n                    if (error.body !== undefined && error.body !== null)\n                        ctx.body = error.body;\n                    \n                    return;\n                }\n                    \n                let scope = ctx.state.scope as Scope;\n                let exceptionHandler = scope.resolve<ExceptionHandler>(this._exceptionHandlerKey);\n                \n                try \n                {\n                    const result = await exceptionHandler.handle(error);\n                    ctx.body = result;\n                }\n                catch (exp)\n                {\n                    if (exp instanceof HttpException)\n                    {\n                        const httpExp: HttpException = exp as HttpException;\n                        ctx.status = httpExp.statusCode;\n                        if (httpExp.body !== undefined && httpExp.body !== null)\n                            ctx.body = httpExp.body;\n                    }   \n                    else\n                    {\n                        // let logMessage = \"\";\n                        // if (exp instanceof Exception)\n                        //     logMessage = exp.toString();\n                        // else if (exp instanceof Error)\n                        //     logMessage = exp.stack;\n                        // else\n                        //     logMessage = exp.toString();\n\n                        // console.log(Date.now(), logMessage);\n                        \n                        await this._logger.logError(exp);\n                        \n                        ctx.status = 500;\n                        ctx.body = \"There was an error processing your request.\";\n                    }    \n                }\n            }\n        });\n    }\n    \n    private configureErrorTrapping(): void\n    {\n        // @ts-ignore\n        this._koa.use(async (ctx, next) =>\n        {\n            try \n            {\n                await next();\n            }\n            catch (error)\n            {\n                if (error instanceof Error)\n                    throw error;    \n                \n                throw new Exception(\"TRAPPED ERROR | \" + error.toString());\n            }\n        });\n    }\n    \n    // private configureEventHandling(): void\n    // {\n    //     this._koa.use(async (ctx, next) =>\n    //     {\n    //         let scope: Scope = ctx.state.scope;\n    //         let eventAggregator = scope.resolve<DefaultEventAggregator>(this._eventAggregatorKey);\n    //         eventAggregator.useProcessor(this._backgroundProcessor);\n    //         this._eventRegistrations.forEach(t => eventAggregator.subscribe(t.eventName, scope.resolve(t.eventHandlerName)));\n    //         await next();\n    //     });\n    // }\n    \n    private configureAuthentication(): void\n    {\n        if (!this._hasAuthenticationHandler)\n            return;\n        \n        this._koa.use(async (ctx, next) =>\n        {\n            let scope = ctx.state.scope as Scope;\n            let callContext = scope.resolve<CallContext>(this._callContextKey);\n            if (callContext.hasAuth)\n            {\n                let authenticationHandler = scope.resolve<AuthenticationHandler>(this._authenticationHandlerKey);\n                let identity = await authenticationHandler.authenticate(callContext.authScheme, callContext.authToken);\n                if (identity && identity instanceof ClaimsIdentity)\n                    ctx.state.identity = identity;  \n            }    \n            \n            await next();\n        });\n    }\n    \n    private configureStaticFileServing(): void\n    {\n        for (let item of this._staticFilePaths)\n            this._koa.use(serve(item.path, item.cache ? {maxage: 1000 * 60 * 60 * 24 * 365} : null));\n    }\n    \n    private configureBodyParser(): void\n    {\n        this._koa.use(KoaBodyParser({\n            strict: true,\n            jsonLimit: \"250mb\"\n        }));\n    }\n    \n    private configureRouting(): void\n    {\n        this._router.configureRouting(this._viewResolutionRoot);\n    }\n    \n    private configureShutDown(): void\n    {\n        if (ConfigurationManager.getConfig<string>(\"env\") === \"dev\")\n            return;\n        \n        this.registerDisposeAction(() =>\n        {\n            console.log(\"CLEANING UP. PLEASE WAIT...\");\n            return Delay.seconds(10);\n        });\n        \n        const shutDown = (signal: string) =>\n        {\n            this._server.close(() =>\n            {\n                console.log(`SERVER STOPPING (${signal}).`);\n                \n                Promise.all(this._disposeActions.map(t => t()))\n                    .then(() =>\n                    {\n                        console.log(`SERVER STOPPED (${signal}).`);\n                        process.exit(0);\n                    })\n                    .catch((e) =>\n                    {\n                        // this will never happen because of how disposeActions work\n                        console.error(e);\n                        process.exit(1);\n                    });\n            });\n        };\n        \n        process.on(\"SIGTERM\", () => shutDown(\"SIGTERM\"));\n        process.on(\"SIGINT\", () => shutDown(\"SIGINT\"));\n    }\n}"]}