{"version":3,"file":"default-storage-service.js","sourceRoot":"","sources":["../../../src/services/storage-service/default-storage-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { StorageService } from \"./storage-service\";\nimport { given } from \"@nivinjoseph/n-defensive\";\n\n\nexport class DefaultStorageService implements StorageService\n{\n    public persist(key: string, value: any): void\n    {\n        given(key, \"key\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        key = key.trim();\n        \n        if (value === undefined || value === null)\n        {\n            localStorage.setItem(key, null);\n            return;\n        }    \n        \n        let storeValue = { item: value };\n        localStorage.setItem(key, JSON.stringify(storeValue));\n    }\n\n    public persistInSession(key: string, value: any): void\n    {\n        given(key, \"key\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        key = key.trim();\n        \n        if (value === undefined || value === null)\n        {\n            sessionStorage.setItem(key, null);\n            return;\n        }\n        \n        let storeValue = { item: value };\n        sessionStorage.setItem(key, JSON.stringify(storeValue));\n    }\n\n    public retrieve(key: string): any\n    {\n        given(key, \"key\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        key = key.trim();\n        \n        let value = localStorage.getItem(key);\n        if (value === undefined || value === null)\n            return null;\n        \n        let parsedValue = JSON.parse(value);\n        return parsedValue.item;\n    }\n\n    public retrieveFromSession(key: string): any\n    {\n        given(key, \"key\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        key = key.trim();\n        \n        let value = sessionStorage.getItem(key);\n        if (value === undefined || value === null)\n            return null;\n        \n        let parsedValue = JSON.parse(value);\n        return parsedValue.item;\n    }\n\n    public remove(key: string): void\n    {\n        given(key, \"key\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        key = key.trim();\n        \n        localStorage.removeItem(key);\n    }\n\n    public removeFromSession(key: string): void\n    {\n        given(key, \"key\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        key = key.trim();\n        \n        sessionStorage.removeItem(key);\n    }\n}"]}