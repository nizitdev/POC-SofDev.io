{"version":3,"file":"default-dialog-service.js","sourceRoot":"","sources":["../../../src/services/dialog-service/default-dialog-service.ts"],"names":[],"mappings":"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","sourcesContent":["const Toastr = require(\"./../../../vendor/toastr.js\");\nif (!Toastr)\n    console.log(\"No Toastr!!!\");    \n\nconst Spinner = require(\"./../../../vendor/spin.js\");   \nif (!Spinner)\n    console.log(\"No Spinner!!!\");    \n\nimport { DialogService } from \"./dialog-service\";\nimport * as $ from \"jquery\";\n\n\nexport class DefaultDialogService implements DialogService\n{\n    private readonly _accentColor: string = \"#000\";\n    private _loadingScreenCount = 0;\n    private _loadingScreen: any;\n    private _spinner: any;\n    private _toastr: Toastr;\n\n\n    constructor(accentColor: string)\n    {\n        if (accentColor)\n            this._accentColor = accentColor.trim();    \n        \n        this._toastr = (<any>window).toastr;\n        \n        this._toastr.options.timeOut = 4000;\n        this._toastr.options.positionClass = \"toast-bottom-right\";\n        this._toastr.options.newestOnTop = false;\n    }\n    \n\n    public showLoadingScreen(): void\n    {\n        if (this._loadingScreenCount === 0)\n        {\n            if (!this._loadingScreen)\n            {\n                this.CreateLoadingScreen();\n            }\n\n            this._loadingScreen.show();\n            this._spinner.spin(document.getElementById(\"spinnerLocation\"));\n        }\n\n        this._loadingScreenCount++;\n    }\n\n    public hideLoadingScreen(): void\n    {\n        this._loadingScreenCount--;\n\n        if (this._loadingScreenCount < 0)\n            this._loadingScreenCount = 0;\n\n        if (this._loadingScreenCount === 0)\n        {\n            if (this._loadingScreen && this._spinner)\n            {\n                this._spinner.stop();\n                this._loadingScreen.hide();\n            }\n        }\n    }\n\n    public showMessage(message: string, title?: string): void\n    {\n        if (title)\n        {\n            this._toastr.info(message, title);\n        }\n        else\n        {\n            this._toastr.info(message);\n        }\n    }\n\n    public showSuccessMessage(message: string, title?: string): void\n    {\n        if (title)\n        {\n            this._toastr.success(message, title);\n        }\n        else\n        {\n            this._toastr.success(message);\n        }\n    }\n    \n    public showWarningMessage(message: string, title?: string): void\n    {\n        if (title)\n        {\n            this._toastr.warning(message, title);\n        }\n        else\n        {\n            this._toastr.warning(message);\n        }\n    }\n\n    public showErrorMessage(message: string, title?: string): void\n    {\n        if (title)\n        {\n            this._toastr.error(message, title);\n        }\n        else\n        {\n            this._toastr.error(message);\n        }\n    }\n\n    public clearMessages(): void\n    {\n        this._toastr.clear();\n    }\n\n\n    private CreateLoadingScreen(): void\n    {\n        this._loadingScreen = $(\"<div style='position:fixed;top:0;left:0;right:0;bottom:0;z-index:100000000;background-color:rgba(255, 255, 255, 0.1);'><div id='spinnerLocation' style='position:absolute;top:50%;left:50%;'></div></div>\")\n            .appendTo($(\"body\"));\n\n        // var opts = {\n        //    lines: 13, // The number of lines to draw\n        //    length: 20, // The length of each line\n        //    width: 10, // The line thickness\n        //    radius: 30, // The radius of the inner circle\n        //    corners: 1, // Corner roundness (0..1)\n        //    rotate: 0, // The rotation offset\n        //    direction: 1, // 1: clockwise, -1: counterclockwise\n        //    color: '#FF7C00', //'#000', // #rgb or #rrggbb or array of colors\n        //    speed: 1, // Rounds per second\n        //    trail: 60, // Afterglow percentage\n        //    shadow: false, // Whether to render a shadow\n        //    hwaccel: false, // Whether to use hardware acceleration\n        //    className: 'spinner', // The CSS class to assign to the spinner\n        //    zIndex: 2e9, // The z-index (defaults to 2000000000)\n        //    top: 'auto', // Top position relative to parent in px\n        //    left: 'auto' // Left position relative to parent in px\n        // };\n\n\n        let opts = {\n            lines: 12, // The number of lines to draw\n            length: 10, // The length of each line\n            width: 4, // The line thickness\n            radius: 10, // The radius of the inner circle\n            corners: 1, // Corner roundness (0..1)\n            rotate: 0, // The rotation offset\n            direction: 1, // 1: clockwise, -1: counterclockwise\n            color: this._accentColor, // '#000', // #rgb or #rrggbb or array of colors\n            speed: 1, // Rounds per second\n            trail: 60, // Afterglow percentage\n            shadow: false, // Whether to render a shadow\n            hwaccel: false, // Whether to use hardware acceleration\n            className: \"spinner\", // The CSS class to assign to the spinner\n            zIndex: 2e9, // The z-index (defaults to 2000000000)\n            top: \"auto\", // Top position relative to parent in px\n            left: \"auto\" // Left position relative to parent in px\n        };\n\n        let target = document.getElementById(\"spinnerLocation\");\n        this._spinner = new Spinner(opts).spin(target);\n\n        this._spinner.stop();\n        this._loadingScreen.hide();\n    }\n}"]}