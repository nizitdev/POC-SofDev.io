{"version":3,"file":"route.js","sourceRoot":"","sources":["../../src/core/route.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,0DAAiD;AACjD,8BAA4B;AAEf,QAAA,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAGjD,SAAgB,KAAK,CAAC,KAAa,EAAE,QAAiB;IAElD,mBAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,cAAc,EAAE;SACjC,cAAc,EAAE;SAChB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,EAAE,+BAA+B,CAAC;SACtE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,uBAAuB,CAAC,CAAC;IAEpE,mBAAK,CAAC,QAAQ,EAAE,UAAU,CAAC;SACtB,cAAc,EAAE;SAChB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,EAAE,+BAA+B,CAAC;SACtE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,uBAAuB,CAAC;SAC9D,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,0BAA0B,CAAC,CAAE;IAEjF,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;IACrB,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAE7C,OAAO,CAAC,MAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,sBAAc,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC,EAAE,MAAM,CAAC,CAAC;AACnG,CAAC;AAjBD,sBAiBC","sourcesContent":["import \"reflect-metadata\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport \"@nivinjoseph/n-ext\";\n\nexport const appRouteSymbol = Symbol(\"appRoute\");\n\n// public\nexport function route(route: string, redirect?: string): Function\n{\n    given(route, \"route\").ensureHasValue()\n        .ensureIsString()    \n        .ensure(t => !t.isEmptyOrWhiteSpace(), \"cannot be empty or whitespace\")\n        .ensure(t => t.trim().startsWith(\"/\"), \"has to begin with '/'\");\n    \n    given(redirect, \"redirect\")\n        .ensureIsString()    \n        .ensure(t => !t.isEmptyOrWhiteSpace(), \"cannot be empty or whitespace\")\n        .ensure(t => t.trim().startsWith(\"/\"), \"has to begin with '/'\")\n        .ensure(t => t.trim().startsWith(route.trim()), \"has to be a nested route\") ;\n    \n    route = route.trim();\n    redirect = redirect ? redirect.trim() : null;\n\n    return (target: Function) => Reflect.defineMetadata(appRouteSymbol, {route, redirect}, target);\n}"]}