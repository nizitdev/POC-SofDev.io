{"version":3,"file":"component-view-model.js","sourceRoot":"","sources":["../../src/core/component-view-model.ts"],"names":[],"mappings":";;AAAA,0DAAiD;AACjD,0DAAqE;AACrE,uDAAkD;AAIlD,MAAa,kBAAmB,SAAQ,+BAAa;IAEjD,IAAY,QAAQ,KAA4B,OAAa,IAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAGxE,QAAQ,CAAI,YAAoB;QAEtC,IAAI,CAAC,IAAI,CAAC,GAAG;YACT,MAAM,IAAI,uCAAyB,CAAC,uCAAuC,CAAC,CAAC;QAEjF,mBAAK,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC;aACrF,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,6BAA6B,YAAY,SAAS,CAAC,CAAC;QAEvG,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,CAAM,CAAC;IACvC,CAAC;IAES,aAAa;QAEnB,IAAI,CAAC,IAAI,CAAC,GAAG;YACT,MAAM,IAAI,uCAAyB,CAAC,4CAA4C,CAAC,CAAC;QAEtF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,CAAC;YACvC,MAAM,IAAI,uCAAyB,CAAC,0DAA0D,CAAC,CAAC;QAEpG,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAM,CAAC;IAClC,CAAC;IAES,aAAa,CAAC,KAAU;QAE9B,IAAI,CAAC,IAAI,CAAC,GAAG;YACT,MAAM,IAAI,uCAAyB,CAAC,4CAA4C,CAAC,CAAC;QAEtF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,CAAC;YACvC,MAAM,IAAI,uCAAyB,CAAC,0DAA0D,CAAC,CAAC;QAEpG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;CACJ;AArCD,gDAqCC","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\nimport { InvalidOperationException } from \"@nivinjoseph/n-exception\";\nimport { BaseViewModel } from \"./base-view-model\";\n\n\n// public\nexport class ComponentViewModel extends BaseViewModel\n{    \n    private get bindings(): ReadonlyArray<string> { return (<any>this)[\"_bindings\"]; }\n    \n    \n    protected getBound<T>(propertyName: string): T\n    {\n        if (!this.ctx)\n            throw new InvalidOperationException(\"calling getBound() in the constructor\");\n        \n        given(propertyName, \"propertyName\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace())\n            .ensure(t => this.bindings.some(u => u === t), `No binding with the name '${propertyName}' found`);\n        \n        return this.ctx[propertyName] as T;\n    }\n    \n    protected getBoundModel<T>(): T\n    {\n        if (!this.ctx)\n            throw new InvalidOperationException(\"calling getBoundModel() in the constructor\");\n        \n        if (!this.bindings.some(t => t === \"value\"))\n            throw new InvalidOperationException(\"calling getBoundModel() without defining 'value' in bind\");\n        \n        return this.ctx[\"value\"] as T;\n    }\n    \n    protected setBoundModel(value: any): void\n    {\n        if (!this.ctx)\n            throw new InvalidOperationException(\"calling setBoundModel() in the constructor\");\n\n        if (!this.bindings.some(t => t === \"value\"))\n            throw new InvalidOperationException(\"calling setBoundModel() without defining 'value' in bind\");\n        \n        this.ctx.$emit(\"input\", value);\n    }\n}"]}