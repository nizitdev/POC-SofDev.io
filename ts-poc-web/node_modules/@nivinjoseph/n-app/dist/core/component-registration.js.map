{"version":3,"file":"component-registration.js","sourceRoot":"","sources":["../../src/core/component-registration.ts"],"names":[],"mappings":";;AAAA,0DAAiD;AACjD,uEAAkE;AAClE,uCAA0C;AAC1C,0DAAgE;AAChE,iCAAoC;AAGpC,MAAa,qBAAsB,SAAQ,+CAAqB;IAO5D,IAAW,OAAO,KAAa,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,IAAW,QAAQ,KAAoB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC/D,IAAW,QAAQ,KAAc,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAGzD,YAAmB,SAAmB;QAElC,mBAAK,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,cAAc,EAAE,CAAC;QAE/C,KAAK,CAAC,SAAS,CAAC,CAAC;QAEjB,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAU,CAAC;QAErC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,uBAAa,EAAE,IAAI,CAAC,SAAS,CAAC;YACtD,MAAM,IAAI,kCAAoB,CAAC,uBAAuB,IAAI,CAAC,IAAI,mCAAmC,CAAC,CAAC;QAExG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC,uBAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEtE,IAAI,OAAO,CAAC,cAAc,CAAC,iBAAU,EAAE,IAAI,CAAC,SAAS,CAAC;YAClD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,iBAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAE/E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC;IAC7D,CAAC;CACJ;AA9BD,sDA8BC","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\nimport { ViewModelRegistration } from \"./view-model-registration\";\nimport { elementSymbol } from \"./element\";\nimport { ApplicationException } from \"@nivinjoseph/n-exception\";\nimport { bindSymbol } from \"./bind\";\n\n\nexport class ComponentRegistration extends ViewModelRegistration\n{\n    private readonly _element: string;\n    private readonly _bindings: Array<string>;\n    private readonly _hasModel: boolean;\n    \n    \n    public get element(): string { return this._element; }\n    public get bindings(): Array<string> { return this._bindings; }\n    public get hasModel(): boolean { return this._hasModel; }\n    \n    \n    public constructor(component: Function)\n    {\n        given(component, \"component\").ensureHasValue();\n        \n        super(component);\n        \n        this._bindings = new Array<string>();\n        \n        if (!Reflect.hasOwnMetadata(elementSymbol, this.viewModel))\n            throw new ApplicationException(`ComponentViewModel '${this.name}' does not have @element applied.`);\n\n        this._element = Reflect.getOwnMetadata(elementSymbol, this.viewModel);\n        \n        if (Reflect.hasOwnMetadata(bindSymbol, this.viewModel))\n            this._bindings.push(...Reflect.getOwnMetadata(bindSymbol, this.viewModel));   \n        \n        this._hasModel = this._bindings.some(t => t === \"value\");\n    }\n}"]}