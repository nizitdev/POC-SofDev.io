{"version":3,"file":"student-view-model.js","sourceRoot":"","sources":["student-view-model.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,8CAAoG;AACpG,0DAAiD;AACjD,gDAA6C;AAG7C,gDAAgD;AAChD,+BAA6B;AAM7B,IAAa,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,0BAAkB;IAUpD,YAAmB,cAA8B,EAAE,iBAAoC;QAEnF,KAAK,EAAE,CAAC;QACR,mBAAK,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAC1E,mBAAK,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAEhF,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAChD,CAAC;IAZD,IAAW,OAAO;QAEjB,OAAO,IAAI,CAAC,QAAQ,CAAU,OAAO,CAAC,CAAC;IACxC,CAAC;IAYM,WAAW;QAEd,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAG;YACpD,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;SAAE,CAAC,CAAC;IAC/B,CAAC;CAQJ,CAAA;AAhCY,gBAAgB;IAJ5B,gBAAQ,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;IACxC,eAAO,CAAC,gBAAgB,CAAC;IACzB,YAAI,CAAC,OAAO,CAAC;IACb,eAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;;GACjC,gBAAgB,CAgC5B;AAhCY,4CAAgB","sourcesContent":["import { ComponentViewModel, template, element, bind, NavigationService } from \"@nivinjoseph/n-app\";\r\nimport { given } from \"@nivinjoseph/n-defensive\";\r\nimport { inject } from \"@nivinjoseph/n-ject\";\r\nimport { StudentService } from \"../../../services/school/student/student-service\";\r\nimport { Student } from \"../../../models/school/student\";\r\nimport * as Routes from \"../../../pages/routes\";\r\nimport \"./student-view.scss\";\r\n\r\n@template(require(\"./student-view.html\"))\r\n@element(\"studentElement\")\r\n@bind(\"value\")  \r\n@inject(\"StudentService\", \"NavigationService\")\r\nexport class StudentViewModel extends ComponentViewModel\r\n{ \r\n    private readonly _navigationService: NavigationService;\r\n    \r\n    \r\n    public get student(): Student {\r\n      \r\n     return this.getBound<Student>(\"value\"); \r\n    }\r\n    \r\n    public constructor(studentService: StudentService, navigationService: NavigationService)\r\n    {\r\n        super();\r\n        given(studentService, \"studentService\").ensureHasValue().ensureIsObject();\r\n        given(navigationService, \"navigationService\").ensureHasValue().ensureIsObject();\r\n       // this._teacherService = teacherService;\r\n        this._navigationService = navigationService;\r\n    }\r\n    \r\n    \r\n    public editStudent(): void\r\n    { \r\n        this._navigationService.navigate(Routes.manageStudent , { \r\n            id: this.student.id });\r\n    }\r\n    \r\n    // public deleteTeacher(): void\r\n    // {\r\n    //     this._teacherService.deleteTeacher(this.teacher.id)\r\n    //         .then(() => this.teacher.isDeleted = true)\r\n    //         .catch(e => console.log(e));\r\n    // }\r\n}"]}