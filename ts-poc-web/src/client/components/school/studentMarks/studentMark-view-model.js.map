{"version":3,"file":"studentMark-view-model.js","sourceRoot":"","sources":["studentMark-view-model.ts"],"names":[],"mappings":";;;;;;;;AAAA,8CAAiF;AAEjF,gDAA6C;AAW7C,IAAa,oBAAoB,GAAjC,MAAa,oBAAqB,SAAQ,0BAAkB;IAKxD,IAAW,gBAAgB;QAE1B,OAAO,IAAI,CAAC,QAAQ,CAAmB,OAAO,CAAC,CAAC;IACjD,CAAC;CAuBJ,CAAA;AA/BY,oBAAoB;IAJhC,gBAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;IAC5C,eAAO,CAAC,aAAa,CAAC;IACtB,YAAI,CAAC,OAAO,CAAC;IACb,eAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;GACjC,oBAAoB,CA+BhC;AA/BY,oDAAoB","sourcesContent":["import { ComponentViewModel, template, element, bind } from \"@nivinjoseph/n-app\";\r\n// import { given } from \"@nivinjoseph/n-defensive\";, NavigationService\r\nimport { inject } from \"@nivinjoseph/n-ject\";\r\n// import { StudentService } from \"../../../services/school/student/student-service\";\r\n// import { Student } from \"../../../models/school/student\";\r\n// import * as Routes from \"../../../pages/routes\";\r\n// import \"./student-view.scss\";\r\n import { StudentMarkEntry } from \"../../../models/school/studentMarkEntry\";\r\n\r\n@template(require(\"./studentMark-view.html\"))\r\n@element(\"studentMark\")\r\n@bind(\"value\")  \r\n@inject(\"StudentService\", \"NavigationService\")\r\nexport class StudentMarkViewModel extends ComponentViewModel\r\n{ \r\n//   //  private readonly _navigationService: NavigationService;\r\n    \r\n    \r\n    public get studentMarkEntry(): StudentMarkEntry {\r\n      \r\n     return this.getBound<StudentMarkEntry>(\"value\"); \r\n    }\r\n    \r\n//     public constructor(studentService: StudentService, navigationService: NavigationService)\r\n//     {\r\n//         super();\r\n//         given(studentService, \"studentService\").ensureHasValue().ensureIsObject();\r\n//         given(navigationService, \"navigationService\").ensureHasValue().ensureIsObject();\r\n//         this._navigationService = navigationService;\r\n//     }\r\n    \r\n     \r\n    // public editStudent(): void\r\n    // { \r\n    //     this._navigationService.navigate(Routes.manageStudent , { \r\n    //         id: this.student.id });\r\n    // }\r\n    \r\n    // public deleteTeacher(): void\r\n    // {\r\n    //     this._teacherService.deleteTeacher(this.teacher.id)\r\n    //         .then(() => this.teacher.isDeleted = true)\r\n    //         .catch(e => console.log(e));\r\n    // }\r\n}"]}