{"version":3,"file":"contact-view-model.js","sourceRoot":"","sources":["contact-view-model.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,8CAAoG;AACpG,+BAA6B;AAE7B,gDAA6C;AAE7C,0DAAiD;AACjD,6CAA6C;AAO7C,IAAa,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,0BAAkB;IAQpD,YAAmB,cAA8B,EAAE,iBAAoC;QACnF,KAAK,EAAE,CAAC;QACR,mBAAK,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAC1E,mBAAK,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAChF,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAChD,CAAC;IATD,IAAW,OAAO,KAAc,OAAO,IAAI,CAAC,QAAQ,CAAU,OAAO,CAAC,CAAC,CAAC,CAAC;IAWlE,WAAW;QACd,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;IACpF,CAAC;IAEM,aAAa;QAChB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;aAC9C,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;aACzC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;CAEJ,CAAA;AA1BY,gBAAgB;IAJ5B,gBAAQ,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;IACxC,eAAO,CAAC,SAAS,CAAC;IAClB,YAAI,CAAC,OAAO,CAAC;IACb,eAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;;GACjC,gBAAgB,CA0B5B;AA1BY,4CAAgB","sourcesContent":["import { ComponentViewModel, template, element, bind, NavigationService } from \"@nivinjoseph/n-app\";\r\nimport \"./contact-view.scss\";\r\nimport { Contact } from \"../../models/contact\";\r\nimport { inject } from \"@nivinjoseph/n-ject\";\r\nimport { ContactService } from \"../../services/contact/contact-service\";\r\nimport { given } from \"@nivinjoseph/n-defensive\";\r\nimport * as Routes from \"../../pages/routes\";\r\n\r\n\r\n@template(require(\"./contact-view.html\"))\r\n@element(\"contact\")\r\n@bind(\"value\")\r\n@inject(\"ContactService\", \"NavigationService\")\r\nexport class ContactViewModel extends ComponentViewModel {\r\n    private readonly _contactService: ContactService;\r\n    private readonly _navigationService: NavigationService;\r\n\r\n\r\n    public get contact(): Contact { return this.getBound<Contact>(\"value\"); }\r\n\r\n\r\n    public constructor(contactService: ContactService, navigationService: NavigationService) {\r\n        super();\r\n        given(contactService, \"contactService\").ensureHasValue().ensureIsObject();\r\n        given(navigationService, \"navigationService\").ensureHasValue().ensureIsObject();\r\n        this._contactService = contactService;\r\n        this._navigationService = navigationService;\r\n    }\r\n\r\n    public editContact(): void {\r\n        this._navigationService.navigate(Routes.manageContact, { id: this.contact.id });\r\n    }\r\n \r\n    public deleteContact(): void {\r\n        this._contactService.deleteContact(this.contact.id)\r\n            .then(() => this.contact.isDeleted = true)\r\n            .catch(e => console.log(e));\r\n    }\r\n\r\n}"]}