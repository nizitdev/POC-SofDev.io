{"version":3,"file":"todo-view-model.js","sourceRoot":"","sources":["todo-view-model.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,8CAAoG;AACpG,4BAA0B;AAE1B,gDAA6C;AAE7C,0DAAiD;AACjD,6CAA6C;AAO7C,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,0BAAkB;IASjD,YAAmB,WAAwB,EAAE,iBAAoC;QAE7E,KAAK,EAAE,CAAC;QACR,mBAAK,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QACpE,mBAAK,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAChF,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAChD,CAAC;IAVD,IAAW,IAAI,KAAW,OAAO,IAAI,CAAC,QAAQ,CAAO,OAAO,CAAC,CAAC,CAAC,CAAC;IAazD,YAAY;QAEf,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;aAC9C,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACxC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAEM,QAAQ;QAEX,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAC9E,CAAC;IAEM,UAAU;QAEb,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;aACrC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACtC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;CACJ,CAAA;AArCY,aAAa;IAJzB,gBAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;IACrC,eAAO,CAAC,MAAM,CAAC;IACf,YAAI,CAAC,OAAO,CAAC;IACb,eAAM,CAAC,aAAa,EAAE,mBAAmB,CAAC;;GAC9B,aAAa,CAqCzB;AArCY,sCAAa","sourcesContent":["import { ComponentViewModel, template, element, bind, NavigationService } from \"@nivinjoseph/n-app\";\nimport \"./todo-view.scss\";\nimport { Todo } from \"../../models/todo\";\nimport { inject } from \"@nivinjoseph/n-ject\";\nimport { TodoService } from \"../../services/todo/todo-service\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport * as Routes from \"../../pages/routes\";\n\n\n@template(require(\"./todo-view.html\"))\n@element(\"todo\")\n@bind(\"value\") \n@inject(\"TodoService\", \"NavigationService\")\nexport class TodoViewModel extends ComponentViewModel\n{\n    private readonly _todoService: TodoService;\n    private readonly _navigationService: NavigationService;\n    \n    \n    public get todo(): Todo { return this.getBound<Todo>(\"value\"); }\n    \n    \n    public constructor(todoService: TodoService, navigationService: NavigationService)\n    {\n        super();\n        given(todoService, \"todoService\").ensureHasValue().ensureIsObject();\n        given(navigationService, \"navigationService\").ensureHasValue().ensureIsObject();\n        this._todoService = todoService;\n        this._navigationService = navigationService;\n    }\n    \n    \n    public completeTodo(): void\n    {\n        this._todoService.markTodoAsCompleted(this.todo.id)\n            .then(() => this.todo.isCompleted = true)\n            .catch(e => console.log(e));\n    }\n    \n    public editTodo(): void\n    {\n        this._navigationService.navigate(Routes.manageTodo, { id: this.todo.id });\n    }\n    \n    public deleteTodo(): void\n    {\n        this._todoService.deleteTodo(this.todo.id)\n            .then(() => this.todo.isDeleted = true)\n            .catch(e => console.log(e));\n    }\n}"]}