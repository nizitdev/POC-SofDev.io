{"version":3,"file":"local-todo-service.js","sourceRoot":"","sources":["local-todo-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { TodoService } from \"./todo-service\";\nimport { Todo } from \"../../models/todo\";\nimport { given } from \"@nivinjoseph/n-defensive\";\n\n\nexport class LocalTodoService implements TodoService\n{\n    private readonly _todos: Array<Todo>;\n    private _counter: number;\n    \n    \n    public constructor()\n    {\n        const todos = new Array<Todo>();\n        const count = 10;\n        \n        for (let i = 0; i < count; i++)\n        {\n            todos.push({\n                id: \"id\" + i,\n                title: \"title\" + i,\n                description: \"description\" + i,\n                isCompleted: false,\n                isDeleted: false\n            });\n        }\n        \n        this._todos = todos;\n        this._counter = count;\n    }\n    \n    \n    public getTodos(): Promise<ReadonlyArray<Todo>>\n    {\n        return Promise.resolve(this._todos);\n    }\n    \n    public getTodo(id: string): Promise<Todo>\n    {\n        given(id, \"id\").ensureHasValue().ensureIsString();\n        \n        return Promise.resolve(this._todos.find(t => t.id === id));\n    }\n    \n    public createTodo(title: string, description: string): Promise<Todo>\n    {\n        given(title, \"title\").ensureHasValue().ensureIsString();\n        given(description, \"description\").ensureIsString();\n        \n        const todo: Todo = {\n            id: \"id\" + this._counter,\n            title: title,\n            description: description,\n            isCompleted: false,\n            isDeleted: false\n        };\n        \n        this._todos.push(todo);\n        return Promise.resolve(todo);\n    }\n    \n    public updateTodo(id: string, title: string, description: string): Promise<void>\n    {\n        given(id, \"id\").ensureHasValue().ensureIsString();\n        given(title, \"title\").ensureHasValue().ensureIsString();\n        given(description, \"description\").ensureIsString();\n        \n        const todo = this._todos.find(t => t.id === id);\n        todo.title = title;\n        todo.description = description;\n        \n        return Promise.resolve();\n    }\n    \n    public markTodoAsCompleted(id: string): Promise<void>\n    {\n        given(id, \"id\").ensureHasValue().ensureIsString();\n        \n        const todo = this._todos.find(t => t.id === id);\n        todo.isCompleted = true;\n        \n        return Promise.resolve();\n    }\n    \n    public deleteTodo(id: string): Promise<void>\n    {\n        given(id, \"id\").ensureHasValue().ensureIsString();\n        \n        const todo = this._todos.find(t => t.id === id);\n        todo.isDeleted = true;\n\n        return Promise.resolve();\n    }\n}"]}