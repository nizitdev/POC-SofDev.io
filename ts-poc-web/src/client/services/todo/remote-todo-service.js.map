{"version":3,"file":"remote-todo-service.js","sourceRoot":"","sources":["remote-todo-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { TodoService } from \"./todo-service\";\r\nimport { Todo } from \"../../models/todo\";\r\nimport { ConfigurationManager } from \"@nivinjoseph/n-config\";\r\nimport * as Axios from \"axios\";\r\nimport { given } from \"@nivinjoseph/n-defensive\";\r\nimport \"@nivinjoseph/n-ext\";\r\nimport { inject } from \"@nivinjoseph/n-ject\";\r\nimport { DialogService } from \"@nivinjoseph/n-app\";\r\n\r\n\r\n@inject(\"DialogService\")\r\nexport class RemoteTodoService implements TodoService\r\n{\r\n    private readonly _dialogService: DialogService;\r\n    private readonly _api: Axios.AxiosInstance;\r\n    \r\n    \r\n    public constructor(dialogService: DialogService)\r\n    {\r\n        given(dialogService, \"dialogService\").ensureHasValue().ensureIsObject();\r\n        \r\n        this._dialogService = dialogService;\r\n        \r\n        let apiUrl = ConfigurationManager.getConfig<string>(\"apiUrl\").trim();\r\n        if (!apiUrl.endsWith(\"/\"))\r\n            apiUrl += \"/\";\r\n        \r\n        this._api = Axios.default.create({\r\n            timeout: 60000,\r\n            baseURL: apiUrl\r\n        });\r\n    }\r\n    \r\n    \r\n    public async getTodos(): Promise<ReadonlyArray<Todo>>\r\n    {\r\n        this._dialogService.showLoadingScreen();\r\n        try \r\n        {\r\n            const response = await this._api.get<ReadonlyArray<Todo>>(\"api/query/getAllTodos\");\r\n            return response.data.map(t =>\r\n            {\r\n                t.isDeleted = false;\r\n                return t;\r\n            });\r\n        }\r\n        catch (error)\r\n        {\r\n            this.showErrorMessage(error.response.status);\r\n            throw error;\r\n        }\r\n        finally\r\n        {\r\n            this._dialogService.hideLoadingScreen();\r\n        }\r\n    }\r\n    \r\n    public async getTodo(id: string): Promise<Todo>\r\n    {\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n        \r\n        this._dialogService.showLoadingScreen();\r\n        try \r\n        {\r\n            const response = await this._api.get(`api/query/getTodo/${id.trim().toLowerCase()}`);\r\n            const todo: Todo = response.data;\r\n            todo.isDeleted = false;\r\n            return todo;\r\n        }\r\n        catch (error)\r\n        {\r\n            this.showErrorMessage(error.response.status);\r\n            throw error;\r\n        }\r\n        finally\r\n        {\r\n            this._dialogService.hideLoadingScreen();\r\n        }        \r\n    }\r\n    \r\n    public async createTodo(title: string, description: string): Promise<Todo>\r\n    {\r\n        given(title, \"title\").ensureHasValue().ensureIsString();\r\n        given(description, \"description\").ensureIsString();\r\n        \r\n        const command = {\r\n            title: title.trim(),\r\n            description: description ? description.trim() : \"\"\r\n        };\r\n        \r\n        this._dialogService.showLoadingScreen();\r\n        try\r\n        {\r\n            const response = await this._api.post(\"api/command/createTodo\", command);\r\n            this._dialogService.showSuccessMessage(\"Successfully created Todo.\");\r\n            const todo: Todo = response.data;\r\n            todo.isDeleted = false;\r\n            return todo;\r\n        }\r\n        catch (error)\r\n        {\r\n            this.showErrorMessage(error.response.status);\r\n            throw error;\r\n        }\r\n        finally\r\n        {\r\n            this._dialogService.hideLoadingScreen();\r\n        }\r\n    }\r\n    \r\n    public async updateTodo(id: string, title: string, description: string): Promise<void>\r\n    {\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n        given(title, \"title\").ensureHasValue().ensureIsString();\r\n        given(description, \"description\").ensureIsString();\r\n        \r\n        const command = {\r\n            id: id.trim().toLowerCase(),\r\n            title: title.trim(),\r\n            description: description ? description.trim() : \"\"\r\n        };\r\n        \r\n        this._dialogService.showLoadingScreen();\r\n        try \r\n        {\r\n            // @ts-ignore\r\n            const response = await this._api.post(\"api/command/updateTodo\", command);\r\n            this._dialogService.showSuccessMessage(\"Successfully updated Todo.\");\r\n        }\r\n        catch (error)\r\n        {\r\n            this.showErrorMessage(error.response.status);\r\n            throw error;\r\n        }\r\n        finally\r\n        {\r\n            this._dialogService.hideLoadingScreen();\r\n        }\r\n    }\r\n    \r\n    public async markTodoAsCompleted(id: string): Promise<void>\r\n    {\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n        \r\n        const command = {\r\n            id: id.trim().toLowerCase()\r\n        };\r\n        \r\n        this._dialogService.showLoadingScreen();\r\n        try \r\n        {\r\n            // @ts-ignore\r\n            const response = await this._api.post(\"api/command/markTodoAsCompleted\", command);\r\n            this._dialogService.showSuccessMessage(\"Successfully marked Todo as complete.\");\r\n        }\r\n        catch (error)\r\n        {\r\n            this.showErrorMessage(error.response.status);\r\n            throw error;\r\n        }\r\n        finally\r\n        {\r\n            this._dialogService.hideLoadingScreen();\r\n        }\r\n    }\r\n    \r\n    public async deleteTodo(id: string): Promise<void>\r\n    {\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n        \r\n        const command = {\r\n            id: id.trim().toLowerCase()\r\n        };\r\n        \r\n        this._dialogService.showLoadingScreen();\r\n        try \r\n        {\r\n            // @ts-ignore\r\n            const response = await this._api.post(\"api/command/deleteTodo\", command);\r\n            this._dialogService.showSuccessMessage(\"Successfully deleted Todo.\");\r\n        }\r\n        catch (error)\r\n        {\r\n            this.showErrorMessage(error.response.status);\r\n            throw error;\r\n        }\r\n        finally\r\n        {\r\n            this._dialogService.hideLoadingScreen();\r\n        }\r\n    }\r\n    \r\n    \r\n    private showErrorMessage(status: number): void\r\n    {\r\n        this._dialogService.showErrorMessage(`There was an error while processing your request. Code ${status}.`);\r\n    }\r\n}"]}