{"version":3,"file":"local-student-service.js","sourceRoot":"","sources":["local-student-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\r\nimport { StudentService } from \"../student/student-service\";\r\nimport { Student } from \"../../../models/school/student\";\r\nimport { StudentMarkEntry } from \"../../../models/school/studentMarkEntry\";\r\nimport { Subject } from \"../../../models/school/subject\";\r\n\r\nexport class LocalStudentService implements StudentService {\r\n    private readonly _student: Array<Student>;\r\n    private _counter: number;\r\n    private readonly _subject: Array<Subject>;\r\n\r\n    private readonly _studentMarkEntry: Array<StudentMarkEntry>;\r\n\r\n    public constructor() {\r\n        const student = new Array<Student>();\r\n        const count = 5;\r\n        const studentMarkEntry = new Array<StudentMarkEntry>();\r\n\r\n        const subject = new Array<Subject>();\r\n\r\n        subject.push({\r\n            id: \"1\",\r\n            name: \"Mathematics\",\r\n        });\r\n        subject.push({\r\n            id: \"2\",\r\n            name: \"Hindi\",\r\n        });\r\n        subject.push({\r\n            id: \"3\",\r\n            name: \"Science\",\r\n        });\r\n        subject.push({\r\n            id: \"4\",\r\n            name: \"Social Science\",\r\n        });\r\n        subject.push({\r\n            id: \"5\",\r\n            name: \"English\",\r\n        });\r\n        this._subject = subject;\r\n        for (let i = 0; i < count; i++) {\r\n            student.push({\r\n                id: \"id\" + i,\r\n                name: \"Student\" + i,\r\n                division: \"class-\" + i,\r\n                sex: \"Male\",\r\n                isDeleted: false\r\n            });\r\n\r\n\r\n\r\n        }\r\n\r\n        this._studentMarkEntry = studentMarkEntry;\r\n        this._student = student;\r\n        this._counter = count;\r\n    }\r\n\r\n\r\n\r\n    public getStudentMarkEntries(): Promise<ReadonlyArray<StudentMarkEntry>> {\r\n        return Promise.resolve(this._studentMarkEntry);\r\n    }\r\n    public getStudentMark(studentId: string): Promise<ReadonlyArray<StudentMarkEntry>> {\r\n        given(studentId, \"studentId\").ensureHasValue().ensureIsString();\r\n         \r\n        return Promise.resolve(this._studentMarkEntry.filter(t => t.student_id === studentId));\r\n    }\r\n    public getSubjects(): Promise<ReadonlyArray<Subject>> {\r\n        return Promise.resolve(this._subject);\r\n    }\r\n    public getStudentMarkEntry(id: string): Promise<StudentMarkEntry> {\r\n        \r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n\r\n        return Promise.resolve(this._studentMarkEntry.find(t => t.student_id === id));\r\n    }\r\n    public getStudent(id: string): Promise<Student> {\r\n      \r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n\r\n        return Promise.resolve(this._student.find(t => t.id === id));\r\n    }\r\n\r\n    public getStudents(): Promise<ReadonlyArray<Student>> {\r\n        return Promise.resolve(this._student);\r\n    }\r\n\r\n\r\n    public createStudentMarkEntry(student_id: string, studentName: string, subject: string, mark: string): Promise<StudentMarkEntry> {\r\n        \r\n        given(studentName, \"studentName\").ensureHasValue().ensureIsString();\r\n        given(subject, \"subject\").ensureIsString();\r\n        given(mark, \"mark\").ensureHasValue().ensureIsString();\r\n\r\n        const studentMarkSEntry: StudentMarkEntry = {\r\n            id: \"id\" + this._counter,\r\n            subject: subject,\r\n            mark: mark,\r\n            student_id: student_id,\r\n            studentName: studentName,\r\n        };\r\n\r\n        this._studentMarkEntry.push(studentMarkSEntry);\r\n        return Promise.resolve(studentMarkSEntry);\r\n    }\r\n    public updateStudentMarkEntry(id: string, student_id: string, studentName: string, subject: string, mark: string): Promise<void> {\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n        given(studentName, \"studentName\").ensureHasValue().ensureIsString();\r\n        given(subject, \"subject\").ensureIsString();\r\n        given(mark, \"mark\").ensureHasValue().ensureIsString();\r\n\r\n        const studentMarkSEntry = this._studentMarkEntry.find(t => t.id === id);\r\n        studentMarkSEntry.studentName = studentName;\r\n        studentMarkSEntry.subject = subject;\r\n        studentMarkSEntry.mark = mark;\r\n        studentMarkSEntry.student_id = student_id;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public createStudent(name: string, sex: string, division: string): Promise<Student> {\r\n        \r\n        given(name, \"name\").ensureHasValue().ensureIsString();\r\n        given(sex, \"sex\").ensureIsString();\r\n        given(division, \"division\").ensureHasValue().ensureIsString();\r\n\r\n        const student: Student = {\r\n            id: \"id\" + this._counter,\r\n            name: name,\r\n            sex: sex,\r\n            isDeleted: false,\r\n            division: division\r\n        };\r\n\r\n        this._student.push(student);\r\n        return Promise.resolve(student);\r\n    }\r\n\r\n    public updateStudent(id: string, name: string, sex: string, division: string): Promise<void> {\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n        given(name, \"name\").ensureHasValue().ensureIsString();\r\n        given(sex, \"sex\").ensureIsString();\r\n        given(division, \"division\").ensureHasValue().ensureIsString();\r\n\r\n        const student = this._student.find(t => t.id === id);\r\n        student.name = name;\r\n        student.sex = sex;\r\n        student.division = division;\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n\r\n    public deleteStudent(id: string): Promise<void> {\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n        const student = this._student.find(t => t.id === id);\r\n        student.isDeleted = true;\r\n\r\n        return Promise.resolve();\r\n    }\r\n}"]}