{"version":3,"file":"local-student-service.js","sourceRoot":"","sources":["local-student-service.ts"],"names":[],"mappings":";;AAAA,0DAAiD;AAKjD,MAAa,mBAAmB;IAK5B;QACI,MAAM,OAAO,GAAG,IAAI,KAAK,EAAW,CAAC;QACrC,MAAM,KAAK,GAAG,CAAC,CAAC;QAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,OAAO,CAAC,IAAI,CAAC;gBACT,EAAE,EAAE,IAAI,GAAG,CAAC;gBACZ,IAAI,EAAE,SAAS,GAAG,CAAC;gBACpB,QAAQ,EAAE,KAAK;gBACf,GAAG,EAAE,MAAM;gBACX,SAAS,EAAE,KAAK;aAClB,CAAC,CAAC;SACN;QAED,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC3B,CAAC;IAGM,WAAW;QACd,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAEM,UAAU,CAAC,EAAU;QACxB,QAAQ,CAAC;QACT,mBAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAElD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACjE,CAAC;IAGM,aAAa,CAAC,IAAY,EAAE,GAAW,EAAE,QAAgB;QAC/D,QAAQ,CAAC;QACN,mBAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QACtD,mBAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,cAAc,EAAE,CAAC;QACnC,mBAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAE9D,MAAM,OAAO,GAAY;YACrB,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,QAAQ;YACxB,IAAI,EAAE,IAAI;YACT,GAAG,EAAE,GAAG;YACT,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,QAAQ;SACrB,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAEM,aAAa,CAAC,EAAU,EAAE,IAAY,EAAE,GAAW,EAAE,QAAgB;QACxE,mBAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAClD,mBAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QACtD,mBAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,cAAc,EAAE,CAAC;QACnC,mBAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAE9D,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACrD,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;QAClB,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE5B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;CAWJ;AA7ED,kDA6EC","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\r\nimport { StudentService } from \"../student/student-service\";\r\nimport { Student } from \"../../../models/school/student\";\r\n\r\n\r\nexport class LocalStudentService implements StudentService {\r\n    private readonly _student: Array<Student>;\r\n    private _counter: number;\r\n\r\n\r\n    public constructor() {\r\n        const student = new Array<Student>();\r\n        const count = 5;\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            student.push({\r\n                id: \"id\" + i,\r\n                name: \"Student\" + i,\r\n               division: \"x-a\",\r\n               sex: \"Male\",\r\n               isDeleted: false\r\n            });\r\n        }\r\n\r\n        this._student = student;\r\n         this._counter = count;\r\n    }\r\n\r\n\r\n    public getStudents(): Promise<ReadonlyArray<Student>> {\r\n        return Promise.resolve(this._student);\r\n    }\r\n\r\n    public getStudent(id: string): Promise<Student> {\r\n        debugger;\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n\r\n        return Promise.resolve(this._student.find(t => t.id === id));\r\n    }\r\n    \r\n\r\n    public createStudent(name: string, sex: string, division: string): Promise<Student> {\r\n     debugger;\r\n        given(name, \"name\").ensureHasValue().ensureIsString();\r\n        given(sex, \"sex\").ensureIsString();\r\n        given(division, \"division\").ensureHasValue().ensureIsString();\r\n       \r\n        const student: Student = {\r\n            id: \"id\" + this._counter,\r\n            name: name,\r\n             sex: sex,\r\n            isDeleted: false,\r\n            division: division\r\n        };\r\n\r\n        this._student.push(student);\r\n        return Promise.resolve(student);\r\n    }\r\n\r\n    public updateStudent(id: string, name: string, sex: string, division: string): Promise<void> {\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n        given(name, \"name\").ensureHasValue().ensureIsString();\r\n        given(sex, \"sex\").ensureIsString();\r\n        given(division, \"division\").ensureHasValue().ensureIsString();\r\n         \r\n        const student = this._student.find(t => t.id === id);\r\n        student.name = name;\r\n        student.sex = sex;\r\n        student.division = division;\r\n         \r\n        return Promise.resolve();\r\n    }\r\n\r\n     \r\n    // public deleteTeacher(id: string): Promise<void> {\r\n    //     given(id, \"id\").ensureHasValue().ensureIsString();\r\n\r\n    //     const teacher = this._teacher.find(t => t.id === id);\r\n    //     teacher.isDeleted = true;\r\n\r\n    //     return Promise.resolve();\r\n    // }\r\n}"]}