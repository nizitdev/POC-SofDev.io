{"version":3,"file":"local-teacher-service.js","sourceRoot":"","sources":["local-teacher-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\r\nimport { TeacherService } from \"../teacher/teacher-service\";\r\nimport { User } from \"../../../models/school/user\";\r\nimport { Subject } from \"../../../models/school/subject\";\r\n\r\n\r\nexport class LocalTeacherService implements TeacherService {\r\n    private readonly _teacher: Array<User>;\r\n    private _counter: number;\r\n \r\n    private readonly _subject: Array<Subject>;\r\n\r\n    public constructor() {\r\n        const teacher = new Array<User>();\r\n        const count = 10;\r\n      \r\n        const subject =  new Array<Subject>();\r\n        \r\n            subject.push({\r\n                id: \"1\" ,\r\n                name: \"Maths\",\r\n            });\r\n            subject.push({\r\n                id: \"2\" ,\r\n                name: \"English\",\r\n            });\r\n            this._subject = subject;\r\n        for (let i = 0; i < count; i++) {\r\n            teacher.push({\r\n                id: \"id\" + i,\r\n                name: \"teacher\" + i,\r\n                userName: \"UserName\" + i,\r\n                isAdmin: false,\r\n                classInCharge: null,\r\n                password : \"12345678\",\r\n                isDeleted: false\r\n            });\r\n        }\r\n\r\n        this._teacher = teacher;\r\n         this._counter = count;\r\n    }\r\n\r\n  public getTeachers(): Promise<ReadonlyArray<User>> {\r\n        return Promise.resolve(this._teacher);\r\n    }\r\n   public getSubjects(): Promise<ReadonlyArray<Subject>> {\r\n        return Promise.resolve(this._subject);\r\n    }\r\n\r\n    public getTeacher(id: string): Promise<User> {\r\n        debugger;\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n\r\n        return Promise.resolve(this._teacher.find(t => t.id === id));\r\n    }\r\n    \r\n\r\n    public createTeacher(name: string, isAdmin: boolean, password: string, userName: string, classInCharge: string): Promise<User> {\r\n     debugger;\r\n        given(name, \"name\").ensureHasValue().ensureIsString();\r\n        given(isAdmin, \"isAdmin\").ensureIsBoolean();\r\n        given(password, \"password\").ensureHasValue().ensureIsString();\r\n        given(userName, \"userName\").ensureHasValue().ensureIsString();\r\n        given(classInCharge, \"classInCharge\").ensureIsString();\r\n        const teacher: User = {\r\n            id: \"id\" + this._counter,\r\n            name: name,\r\n            isAdmin: isAdmin,\r\n            password: password,\r\n            userName: userName,\r\n            isDeleted: false,\r\n            classInCharge: classInCharge\r\n        };\r\n\r\n        this._teacher.push(teacher);\r\n        return Promise.resolve(teacher);\r\n    }\r\n\r\n    public updateTeacher(id: string, name: string, isAdmin: boolean, password: string, userName: string, classInCharge: string): Promise<void> {\r\n        given(id, \"id\").ensureHasValue().ensureIsString();\r\n        given(name, \"name\").ensureHasValue().ensureIsString();\r\n        given(isAdmin, \"isAdmin\").ensureIsBoolean();\r\n        given(password, \"password\").ensureHasValue().ensureIsString();\r\n        given(userName, \"userName\").ensureHasValue().ensureIsString();\r\n        given(classInCharge, \"classInCharge\").ensureIsString();\r\n         \r\n        const teacher = this._teacher.find(t => t.id === id);\r\n        teacher.name = name;\r\n        teacher.isAdmin = isAdmin;\r\n        teacher.password = password;\r\n        teacher.userName = userName;\r\n        teacher.classInCharge = classInCharge;\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n     \r\n    // public deleteTeacher(id: string): Promise<void> {\r\n    //     given(id, \"id\").ensureHasValue().ensureIsString();\r\n\r\n    //     const teacher = this._teacher.find(t => t.id === id);\r\n    //     teacher.isDeleted = true;\r\n\r\n    //     return Promise.resolve();\r\n    // }\r\n}"]}