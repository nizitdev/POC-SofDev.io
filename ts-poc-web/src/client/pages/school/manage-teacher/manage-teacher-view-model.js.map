{"version":3,"file":"manage-teacher-view-model.js","sourceRoot":"","sources":["manage-teacher-view-model.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,8CAA+E;AAC/E,uCAAuC;AACvC,sCAAoC;AACpC,gDAA6C;AAE3C,0DAAiD;AAQnD,IAAa,sBAAsB,GAAnC,MAAa,sBAAuB,SAAQ,0BAAkB;IAsC1D,YAAoB,cAA8B;QAE9C,KAAK,EAAE,CAAC;QACP,mBAAK,CAAE,cAAc,EAAE,iBAAiB,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAI7E,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAGrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IAExB,CAAC;IArDD,IAAW,QAAQ;QAEf,OAAO,IAAI,CAAC,QAAQ,CAAW,OAAO,CAAC,CAAC;IACzC,CAAC;IAGN,IAAW,SAAS;QAElB,OAAO,IAAI,CAAC,UAAU,CAAC;IAAC,CAAC;IAYzB,IAAW,SAAS,KAAa,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAE1D,IAAW,IAAI,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAChD,IAAW,IAAI,CAAC,KAAa,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;IAEtD,IAAW,OAAO,KAAc,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvD,IAAW,OAAO,CAAC,KAAc,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;IAE7D,IAAY,QAAQ,KAAa,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACzD,IAAY,QAAQ,CAAC,KAAa,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;IAE/D,IAAY,QAAQ,KAAa,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACzD,IAAY,QAAQ,CAAC,KAAa,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;CAgE9D,CAAA;AAlGQ,sBAAsB;IAJlC,gBAAQ,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;IAC/C,aAAK,CAAC,MAAM,CAAC,aAAa,CAAC;IAC3B,YAAI,CAAC,OAAO,CAAC;IACb,eAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;;GACjC,sBAAsB,CAkG9B;AAlGQ,wDAAsB","sourcesContent":["import {template, route , ComponentViewModel, bind } from \"@nivinjoseph/n-app\";\r\nimport * as Routes from \"../../routes\";\r\nimport \"./manage-teacher-view.scss\";\r\nimport { inject } from \"@nivinjoseph/n-ject\";\r\n import { TeacherService } from \"../../../services/school/teacher/teacher-service\";\r\n  import { given } from \"@nivinjoseph/n-defensive\";\r\nimport { Division } from \"../../../models/school/division\";\r\n// import { AdminService } from \"../../../services/school/admin/admin-service\";\r\n\r\n@template(require(\"./manage-teacher-view.html\"))\r\n@route(Routes.manageTeacher)\r\n@bind(\"value\") \r\n@inject(\"TeacherService\", \"NavigationService\")\r\nexport class ManageTeacherViewModel extends ComponentViewModel\r\n{\r\n    public get division(): Division {\r\n      \r\n        return this.getBound<Division>(\"value\"); \r\n       }\r\n       \r\n  private _divisions:  ReadonlyArray<Division>;\r\n  public get divisions(): ReadonlyArray<Division> {\r\n   \r\n    return this._divisions; }\r\n      \r\n   // private readonly _teacherService: TeacherService;\r\n   // private readonly _navigationService: NavigationService;, NavigationService\r\n    private _operation: string;\r\n   // private _id: string | null;\r\n    private _name: string;\r\n    private _userName: string;\r\n    private _password: string;\r\n    private _isAdmin: boolean;\r\n     \r\n    \r\n    public get operation(): string { return this._operation; }\r\n\r\n    public get name(): string { return this._name; }\r\n    public set name(value: string) { this._name = value; }\r\n\r\n    public get isAdmin(): boolean { return this._isAdmin; }\r\n    public set isAdmin(value: boolean) { this._isAdmin = value; }\r\n\r\n    public get  userName(): string { return this._userName; }\r\n    public set  userName(value: string) { this._userName = value; }\r\n\r\n    public get  password(): string { return this._password; }\r\n    public set  password(value: string) { this._password = value; }\r\n   // private readonly _adminService: AdminService;\r\n \r\n \r\n    public constructor( teacherService: TeacherService)\r\n    {\r\n        super();\r\n         given( teacherService, \" teacherService\").ensureHasValue().ensureIsObject();\r\n        //  given(navigationService, \"navigationService\").ensureHasValue().ensureIsObject();, navigationService: NavigationService\r\n         // given(adminService, \"adminService\").ensureHasValue().ensureIsObject();\r\n       // this._adminService = adminService;, adminService: AdminService\r\n        this._divisions = [];\r\n       // this._teacherService =  teacherService;\r\n     //  this._navigationService = navigationService;\r\n        this._operation = \"\";\r\n      //    this._id = null; \r\n        this._name = \"\";\r\n        this._isAdmin = false;\r\n        this._password = \"\";\r\n        this._userName = \"\";\r\n\r\n    } \r\n    // public save(): void\r\n    // {\r\n    //     debugger;\r\n    //     const savePromise: Promise<any> = this._id\r\n    //     ? this._teacherService.updateTeacher(this._id, this._firstName, this._lastName, this._dateOfBirth, this._sex, this._address)\r\n    //         : this._teacherService.createTeacher(this._firstName, this._lastName, this._dateOfBirth, this._sex, this._address);\r\n        \r\n    //     savePromise\r\n    //         .then(() => this._navigationService.navigate(Routes.listTeachers, {}))\r\n    //         .catch(e => console.log(e));\r\n    // }\r\n    // protected onEnter(): void\r\n    // {\r\n    // alert(\"h\");\r\n    //     this._adminService.getDivisions()\r\n    //         .then(t => this._divisions = t)\r\n    //         .catch(e => console.log(e));\r\n    // }\r\n    \r\n    //  protected onEnter(id?: string): void\r\n    // {\r\n    //     if (id && !id.isEmptyOrWhiteSpace())\r\n    //     {\r\n    //         this._operation = \"Update\";\r\n            \r\n    //         this._teacherService.getTeacher(id)\r\n    //             .then(t =>\r\n    //             {\r\n    //           //      this._id = t.id;\r\n    //                 this._isAdmin = t.IsAdmin;\r\n    //                 this._name = t.name;\r\n    //                 this._userName = t.userName;\r\n    //                 this._password = t.password;\r\n                   \r\n    //             })\r\n    //             .catch(e => console.log(e));\r\n    //     }\r\n    //     else\r\n    //     {\r\n    //         this._operation = \"Add\";\r\n    //     }\r\n    // }\r\n    }\r\n\r\n    \r\n   \r\n"]}