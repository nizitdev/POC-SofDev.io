{"version":3,"file":"manage-teacher-view-model.js","sourceRoot":"","sources":["manage-teacher-view-model.ts"],"names":[],"mappings":"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","sourcesContent":["import { template, route, PageViewModel, NavigationService } from \"@nivinjoseph/n-app\";\r\nimport * as Routes from \"../../routes\";\r\nimport \"./manage-teacher-view.scss\";\r\nimport { inject } from \"@nivinjoseph/n-ject\";\r\nimport { TeacherService } from \"../../../services/school/teacher/teacher-service\";\r\nimport { given } from \"@nivinjoseph/n-defensive\";\r\nimport { Division } from \"../../../models/school/division\";\r\nimport { AdminService } from \"../../../services/school/admin/admin-service\";\r\nimport { Qualification } from \"../../../models/school/qualification\";\r\n\r\n\r\n@template(require(\"./manage-teacher-view.html\"))\r\n@route(Routes.manageTeacher)\r\n@inject(\"TeacherService\", \"NavigationService\", \"AdminService\")\r\nexport class ManageTeacherViewModel extends PageViewModel {\r\n\r\n    private readonly _teacherService: TeacherService;\r\n    private readonly _navigationService: NavigationService;\r\n    private readonly _adminService: AdminService; \r\n    \r\n    private _divisions: ReadonlyArray<Division>;\r\n    public get divisions(): ReadonlyArray<Division> {return this._divisions; }\r\n  \r\n    private _qualifications: ReadonlyArray<Qualification>;\r\n    public get qualifications(): ReadonlyArray<Qualification> {return this._qualifications; }\r\n\r\n    private _operation: string;\r\n    private _id: string | null;\r\n    private _name: string;\r\n    private _userName: string;\r\n    private _password: string;\r\n    private _isAdmin: boolean;\r\n    private _classInCharge:  string ;\r\n    private _qualification:  Array<string> ;\r\n     \r\n    public get operation(): string { return this._operation; }\r\n\r\n    public get name(): string { return this._name; }\r\n    public set name(value: string) { this._name = value; }\r\n\r\n    public get isAdmin(): boolean { return this._isAdmin; }\r\n    public set isAdmin(value: boolean) { this._isAdmin = value; }\r\n\r\n    public get userName(): string { return this._userName; }\r\n    public set userName(value: string) { this._userName = value; }\r\n\r\n    public get password(): string { return this._password; }\r\n    public set password(value: string) { this._password = value; }\r\n\r\n    public get  classInCharge(): string {  return this._classInCharge; }\r\n    public set  classInCharge(value:   string ) { this._classInCharge = value; } \r\n\r\n    public get  qualification(): Array<string> {  return this._qualification; }\r\n    public set  qualification(value:   Array<string>  ) { this._qualification = value; } \r\n\r\n    public constructor(teacherService: TeacherService, navigationService: NavigationService, adminService: AdminService,  ) {\r\n        super();\r\n        given(adminService, \"adminService\").ensureHasValue().ensureIsObject();\r\n        this._adminService = adminService; \r\n        given(teacherService, \"teacherService\").ensureHasValue().ensureIsObject();\r\n        this._teacherService = teacherService;\r\n        given(navigationService, \"navigationService\").ensureHasValue().ensureIsObject();\r\n        this._navigationService = navigationService;\r\n         \r\n        this._divisions = [];\r\n        this._qualifications = [];\r\n        this._operation = \"\";\r\n        this._id = null;\r\n        this._name = \"\";\r\n        this._isAdmin = false;\r\n        this._password = \"\";\r\n        this._userName = \"\";\r\n        this._classInCharge = \"\";\r\n        this.qualification =  [];\r\n    }\r\n\r\n    public save(): void {\r\n      \r\n        \r\n       const savePromise: Promise<any> = this._id\r\n            ? this._teacherService.updateTeacher(this._id, this._name, this._isAdmin, this._password, this._userName, this._classInCharge, this._qualification)\r\n            : this._teacherService.createTeacher(this._name, this._isAdmin, this._password, this._userName, this._classInCharge, this._qualification);\r\n            \r\n        savePromise\r\n            .then(() => this._navigationService.navigate(Routes.listTeachers, {}))\r\n            .catch(e => console.log(e));\r\n    }\r\n\r\n\r\n    protected onEnter(id?: string): void {\r\n        this._adminService.getDivisions()\r\n            .then(t => this._divisions = t)\r\n            .catch(e => console.log(e));\r\n\r\n            this._teacherService.getQualification()\r\n            .then(t => this._qualifications = t)\r\n            .catch(e => console.log(e));\r\n\r\n        if (id && !id.isEmptyOrWhiteSpace()) {\r\n            this._operation = \"Update\";\r\n            \r\n            this._teacherService.getTeacher(id)\r\n                .then(t => {\r\n                    this._id = t.id;\r\n                    this._isAdmin = t.isAdmin;\r\n                    this._name = t.name;\r\n                    this._userName = t.userName;\r\n                    this._password = t.password;\r\n                    this._classInCharge = t.classInCharge;\r\n                    this.qualification =  t.qualification;\r\n                })\r\n                .catch(e => console.log(e));\r\n        }\r\n        else {\r\n            this._operation = \"Add\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}"]}