{"version":3,"file":"list-contact-view-model.js","sourceRoot":"","sources":["list-contact-view-model.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,8CAAoE;AACpE,oCAAoC;AACpC,oCAAkC;AAClC,gDAA6C;AAC7C,0DAAiD;AAQjD,IAAa,oBAAoB,GAAjC,MAAa,oBAAqB,SAAQ,qBAAa;IAUnD,YAAmB,cAA8B;QAE7C,KAAK,EAAE,CAAC;QACR,mBAAK,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,CAAC;QAC1E,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAVD,IAAW,QAAQ,KAA6B,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACxE,IAAW,UAAU,KAAa,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5D,IAAW,UAAU,CAAC,KAAa,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC;IAU3D,MAAM;QAGT,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC;aAC/C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;aAC7B,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IACS,OAAO;QAEb,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;aAC7B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;aAC7B,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;CACJ,CAAA;AA/BY,oBAAoB;IAHhC,gBAAQ,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;IAC7C,aAAK,CAAC,MAAM,CAAC,YAAY,CAAC;IAC1B,eAAM,CAAC,gBAAgB,CAAC;;GACZ,oBAAoB,CA+BhC;AA/BY,oDAAoB","sourcesContent":["import { PageViewModel, template, route } from \"@nivinjoseph/n-app\";\r\nimport * as Routes from \"../routes\";\r\nimport \"./list-contact-view.scss\";\r\nimport { inject } from \"@nivinjoseph/n-ject\";\r\nimport { given } from \"@nivinjoseph/n-defensive\";\r\nimport { Contact } from \"../../models/contact\";\r\nimport { ContactService } from \"../../services/contact/contact-service\";\r\n\r\n\r\n@template(require(\"./list-contact-view.html\"))\r\n@route(Routes.listContacts)\r\n@inject(\"ContactService\")    \r\nexport class ListContactViewModel extends PageViewModel\r\n{\r\n    private readonly _contactService: ContactService;\r\n    private _contacts:  ReadonlyArray<Contact>;\r\n    private _searchText: string;\r\n    \r\n    public get contacts(): ReadonlyArray<Contact> { return this._contacts; }\r\n    public get searchText(): string { return this._searchText; }\r\n    public set searchText(value: string) { this._searchText = value; }\r\n    \r\n    public constructor(contactService: ContactService)\r\n    {\r\n        super();\r\n        given(contactService, \"contactService\").ensureHasValue().ensureIsObject();\r\n        this._contactService = contactService;\r\n        this._contacts = [];\r\n    }\r\n    \r\n    public search(): void\r\n    {\r\n        \r\n        this._contactService.searchContacts(this.searchText)\r\n            .then(t => this._contacts = t)\r\n            .catch(e => console.log(e));\r\n    }\r\n    protected onEnter(): void\r\n    {\r\n        this._contactService.getContacts()\r\n            .then(t => this._contacts = t)\r\n            .catch(e => console.log(e));\r\n    }\r\n}"]}